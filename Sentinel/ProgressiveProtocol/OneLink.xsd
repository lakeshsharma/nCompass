<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:v1_0="http://schemas.paltronics.com/onelink/v1_0"
           elementFormDefault="qualified"
           targetNamespace="http://schemas.paltronics.com/onelink/v1_0">

    <!--
     ======================================= COMMON =========================================
    -->

    <!-- Onelink-assigned unique device identifier. -->
    <xs:simpleType name="DeviceId">
        <xs:restriction base="xs:long"/>
    </xs:simpleType>

    <!-- OneLink-assigned unique address for a device. -->
    <xs:simpleType name="DeviceAddress">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="MessageId">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:complexType name="AbstractDeviceMessage">
        <xs:sequence>
            <!-- The one link id of the device that originated the message. -->
            <xs:element name="SourceDeviceId" type="v1_0:DeviceId"/>

            <!-- The messaging address of the device that originated the message (ie, a reply-to destination). -->
            <xs:element name="SourceDevice" type="v1_0:DeviceAddress"/>

            <!-- The source device configuration from One Link -->
            <xs:element name="SourceDeviceConfigVersion" type="xs:long"/>

            <!-- The source device asset number (not the AFT asset number ... more like GMID). -->
            <xs:element name="SourceAsset" type="xs:string"/>

            <!-- The timestamp in milliseconds as determined by the creator of the message. -->
            <xs:element name="Timestamp" type="xs:long"/>

            <!-- A unique ID generated by the creator of the message for correlating responses to requests. -->
            <xs:element name="MessageId" type="v1_0:MessageId" minOccurs="0"/>

            <!-- Identifier unique to each installation of One Link, devices must use this to filter multicast
            packets as often an operator will have multiple systems on the same network.  The Value is generated as a
            GUID on initial database creation but can be overridden to any string (ie could for example be set to
            "training" or "production").

            The header 'OneLinkSystemId' is included on all stomp multicast frames, devices should only process
            multicast stomp frames if the OneLinkSystemId header matches the value returned in the discovery
            configuration.

            Note that the header is NOT sent on TCP stomp frames ... only multicast.

                OneLinkSystemId: c4f61e91-c781-4653-bb2a-273d19574776

            -->
            <xs:element name="OneLinkSystemId" type="xs:string"/>

            <xs:element name="ReplyToDeviceAddress" type="xs:string" minOccurs="0"/>
            <xs:element name="ReplyToDeviceId" type="xs:long" minOccurs="0"/>

            <!-- This (optional) flag indicates if the message was sent later when device reconnected to the
            concentrator (because initial attempt failed due to disconnection from concentrator) -->
            <xs:element name="Reconnect" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Device-related events. -->
    <xs:complexType name="DeviceEvent">
        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="DeviceRestartRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="Success">
        <xs:restriction base="xs:boolean"/>
    </xs:simpleType>

    <xs:simpleType name="Name">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="Description">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="IPAddress">
        <xs:restriction base="xs:string">
            <xs:minLength value="7"/>
            <xs:maxLength value="15"/>
            <xs:pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MACAddress">
        <xs:restriction base="xs:string">
            <xs:minLength value="17"/>
            <xs:maxLength value="17"/>
            <xs:pattern value="((([a-zA-Z0-9]{2})(:|-)){5}([a-zA-Z0-9]{2}))"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Currency">
        <xs:restriction base="xs:decimal">
            <xs:totalDigits value="12"/>
            <xs:fractionDigits value="2"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="File">
        <xs:sequence>
            <xs:element name="FileName" type="xs:string"/>
            <xs:element name="MD5" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="Percentage">
        <xs:restriction base="xs:decimal">
            <xs:totalDigits value="12"/>
            <xs:fractionDigits value="8"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- todo: defunct -->
    <xs:element name="Discovery">
        <xs:annotation>
            <xs:documentation>
                Discovery message, multicast as a 'heartbeat' from One Link every 10 seconds.

                Tells devices how to find One Link.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:DeviceEvent">
                    <xs:sequence>
                        <xs:element name="Time" type="xs:long"/>
                        <xs:element name="Url" type="xs:string"/>
                        <xs:element name="StompUrl" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="DeviceLinkStatus">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:DeviceEvent">
                    <xs:sequence>
                        <!-- The one link id of the device whose status has changed. -->
                        <xs:element name="DeviceId" type="v1_0:DeviceId"/>

                        <!-- Whether discovery resulted in an approved configuration or a quarantine. -->
                        <xs:element name="Status" type="v1_0:DeviceLinkStatusType"/>

                        <!-- Source Asset of the device that is offline -->
                        <xs:element name="DeviceAsset" type="xs:string"/>

                        <!-- Device Type, optional -->
                        <xs:element name="DeviceType" type="xs:string" minOccurs="0" maxOccurs="1"/>

                        <!-- ======== New in 5.2.1 ======== -->
                        <xs:element name="Venue" type="xs:string"/>
                        <xs:element name="Section" type="xs:string"/>
                        <xs:element name="Bank" type="xs:string"/>
                        <xs:element name="Location" type="xs:string"/>
                        <xs:element name="IPAddress" type="xs:string"/>
                        <xs:element name="DeviceMAC" type="xs:string"/>
                        <xs:element name="ManagementURL" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="DeviceLinkStatusType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Unknown"/>
            <xs:enumeration value="Discovery"/>
            <xs:enumeration value="Online"/>
            <xs:enumeration value="Offline"/>
            <xs:enumeration value="NTPOffline"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="DiscoveryEvent">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:DeviceEvent">
                    <xs:sequence>
                        <!-- Whether discovery resulted in an approved configuration or a quarantine. -->
                        <xs:element name="Status" type="v1_0:DiscoveryStatus"/>

                        <!-- Optional human-readable (english) string describing the failure. -->
                        <xs:element name="Description" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="DiscoveryStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Failed"/>
            <xs:enumeration value="Quarantined"/>
            <xs:enumeration value="Success"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Defines a single messaging destination. -->
    <xs:complexType name="MessageChannel">
        <xs:sequence>
            <!-- DEPRECATED ... will be null. -->
            <xs:element name="Url" type="xs:string" minOccurs="0"/>

            <!-- A humand-readable name for this channel. -->
            <xs:element name="Destination" type="xs:string"/>

            <!-- For multicast channels this will be the stomp url such as "stomp://239.1.2.3:61613". -->
            <xs:element name="MulticastDestination" type="xs:string"/>

            <!-- DEPRECATED -->
            <xs:element name="EncryptionKey" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Firmware">
        <xs:sequence>
            <!-- Partition / image / firmware name, ie "Pal264LinuxFS.img" -->
            <xs:element name="Name" type="xs:string"/>

            <!-- Version number for image, such as "1.3.5.1234".  May contain alphas. -->
            <xs:element name="Version" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Base type for device configuration requests (discovery requests).  -->
    <xs:complexType name="AbstractConfigurationRequest">
        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage">
                <xs:sequence>
                    <xs:element name="DeviceMAC" type="v1_0:MACAddress"/>

                    <!-- Primary software version, ie for megamic "1.2.3.1234" -->
                    <xs:element name="ImplementationVersion" type="xs:string"/>

                    <xs:element name="IPAddress" type="v1_0:IPAddress" minOccurs="0"/>

                    <!-- Optional http/https web console url. -->
                    <xs:element name="ManagementURL" type="xs:string" minOccurs="0"/>

                    <!-- Hardware platform name -->
                    <xs:element name="Platform" type="xs:string"/>

                    <!-- List of firmware versions for given platform -->
                    <xs:element name="PlatformFirmware" type="v1_0:Firmware" maxOccurs="unbounded"/>

                    <!-- Optional location string that would be meaninful to an end-user on where this device is located. -->
                    <xs:element name="Location" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Base type for device configurations (discovery replies and network updates). -->
    <xs:complexType name="AbstractConfiguration" abstract="true">
        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage">
                <xs:sequence>
                    <!-- Device identifier, gernally the same value for the lifetime of the device. -->
                    <xs:element name="DeviceId" type="v1_0:DeviceId"/>

                    <!-- deprecated -->
                    <xs:element name="DeviceConfigVersion" type="xs:long"/>

                    <!-- Address device should subscribe to / destination for device messages. -->
                    <xs:element name="DeviceAddress" type="v1_0:DeviceAddress"/>

                    <!-- Concentrator (stomp) URL and key as assigned by One Link. -->
                    <xs:element name="HostChannel" type="v1_0:MessageChannel"/>

                    <!-- Multicast destination for 3rd party events. -->
                    <xs:element name="EventChannel" type="v1_0:MessageChannel"/>

                    <!-- deprecated-->
                    <xs:element name="OpenWireChannel" type="v1_0:MessageChannel"/>

                    <!-- Optional group channel only used for media video wall. -->
                    <xs:element name="GroupChannel" type="v1_0:MessageChannel"/>

                    <!-- Asset number, unique within device type. -->
                    <xs:element name="AssetNumber" type="xs:string"/>

                    <!-- Name of Bank where device is located. -->
                    <xs:element name="BankName" type="xs:string"/>

                    <!-- Timezone device is located in, according to 3E server. -->
                    <xs:element name="TimeZone" type="xs:string" minOccurs="0"/>

                    <!-- URL to proxy server for caching content, according to 3E server. -->
                    <xs:element name="ProxyURL" type="xs:string" minOccurs="0"/>

                    <!-- Prev Encryption Seed -->
                    <xs:element name="PrevMulticastEncryptionSeed" type="xs:string" nillable="true"/>

                    <!-- Curr Encryption Seed -->
                    <xs:element name="CurrMulticastEncryptionSeed" type="xs:string" nillable="true"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MulticastEncryptionConfiguration">

        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage">
                <xs:sequence>
                    <!-- Device identifier, gernally the same value for the lifetime of the device. -->
                    <xs:element name="DeviceId" type="v1_0:DeviceId"/>

                    <!-- Address device should subscribe to / destination for device messages. -->
                    <xs:element name="DeviceAddress" type="v1_0:DeviceAddress"/>
                    <!-- Prev Encryption Seed -->
                    <xs:element name="PrevMulticastEncryptionSeed" type="xs:string" nillable="true"/>

                    <!-- Curr Encryption Seed -->
                    <xs:element name="CurrMulticastEncryptionSeed" type="xs:string" nillable="true"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--
     ======================================= CORE =========================================
    -->

    <xs:element name="ConcentratorConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfiguration">
                    <xs:sequence>
                        <xs:element name="MessageTypeRoutingRules" type="v1_0:MessageTypeRoutingRule" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="MessageServerWorkers" type="xs:int"/>
                        <xs:element name="MessageServerJackpotWorkers" type="xs:int"/>
                        <xs:element name="MessageServerDiscoveryWorkers" type="xs:int"/>
                        <xs:element name="Peers" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="sslEnabled" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MessageTypeRoutingRule">
        <xs:sequence>
            <xs:element name="MessageType" type="xs:string"/>
            <xs:element name="Persistent" type="xs:boolean"/>
            <xs:element name="Destination" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="Type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Boolean"/>
            <xs:enumeration value="Int"/>
            <xs:enumeration value="Long"/>
            <xs:enumeration value="String"/>
            <xs:enumeration value="Password"/>
            <!-- Hidden in UI, encrypted during storage/transmission (otherwise same as String)  -->
            <xs:enumeration value="Number"/>
            <!-- pre-dated the int/long/decimal, left for compatibility -->
            <xs:enumeration value="URL"/>
            <xs:enumeration value="Decimal"/>
            <xs:enumeration value="Date"/>
            <xs:enumeration value="DateTime"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Setting">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="type" type="v1_0:Type"/>
            <xs:element name="value" type="xs:string"/>
            <xs:element name="description" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ServiceConfigurationRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfigurationRequest">
                    <xs:sequence>
                        <xs:element minOccurs="1" name="Name" type="xs:string"/>
                        <xs:element minOccurs="1" name="Type" type="xs:string"/>
                        <xs:element minOccurs="1" name="Description" type="xs:string"/>
                        <xs:element minOccurs="0" maxOccurs="unbounded" name="Settings" type="v1_0:Setting"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ServiceConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfiguration">
                    <xs:sequence>
                        <xs:element minOccurs="0" maxOccurs="unbounded" name="Settings" type="v1_0:Setting"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Ping messages can be sent by device to test connectivity to concentrator.

     There is no reply to a ping.
-->
    <xs:element name="Ping">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Acknowledgement to a configuration update. -->
    <xs:element name="DeviceAcknowledgement">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MessageRefId" type="v1_0:MessageId"/>
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element minOccurs="0" name="Description" type="xs:string"/>
                        <xs:element minOccurs="0" name="ForceActivation" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Request for current device diagnostic information. -->
    <xs:element name="DeviceStatusRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Current device diagnostic information. -->
    <xs:element name="DeviceStatus">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="DeviceMAC" type="v1_0:MACAddress"/>
                        <xs:element name="IPAddress" type="v1_0:IPAddress"/>
                        <xs:element name="OS" type="xs:string"/>
                        <xs:element name="Version" type="xs:string"/>
                        <xs:element name="TotalCacheMB" type="xs:int"/>
                        <xs:element name="AvailableCacheMB" type="xs:int"/>
                        <xs:element name="Top" type="xs:string"/>
                        <xs:element name="Logread" type="xs:string"/>
                        <xs:element name="Ifconfig" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- A type of notification signifying the device had a configuration conflict after already being
         online, and needs to go back into discovery (should be put into quarantine by onelink). -->
    <xs:element name="QuarantineNotification">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The notification message -->
                        <xs:element name="Message" type="xs:string"/>

                        <!-- Details, such as the string version of an XmlSerializable -->
                        <xs:element name="Details" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Command telling a device to download or install the given file from a URL.

        The device must respond with a DeviceAcknowledgement.
    -->
    <xs:element name="FileDownload">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- A URL from which to download the file, such as mtftp:// or http:// -->
                        <xs:element name="FileUrl" type="xs:string"/>

                        <!-- If true, the file will be executed as an installer. -->
                        <xs:element name="Install" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="FirmwareFile">
        <xs:sequence>
            <xs:element name="FileUrl" type="xs:string"/>
            <xs:element name="FileName" type="xs:string"/>
            <xs:element name="Signature" type="xs:string"/>
            <xs:element name="Version" type="xs:string"/>
            <xs:element name="Size" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="FirmwareDownload">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="FirmwareFile" type="v1_0:FirmwareFile" maxOccurs="unbounded"/>
                        <xs:element name="Reason" type="xs:string"/>
                        <xs:element name="User" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Command telling a device to provide system integrity check data.

        The device must respond with a DeviceAcknowledgement.
    -->
    <xs:element name="IntegrityCheck">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- A URL indicating where to send the status file, such as mtftp:// or http:// -->
                        <xs:element name="FileUrl" type="xs:string"/>

                        <!-- If true, the device will be quarantined until integrity check is verified. -->
                        <xs:element name="Quarantine" type="xs:boolean"/>

                        <!-- Data read from device -->
                        <xs:element name="Data" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>


    <!-- Make the latest approved configurations effective for the given list of devices.

         The device configurations in One Link are snapshotted and each device is sent
         it's latest configuration.  Devices respond with a DeviceAcknowledgement and
         a boolean of whether the configuration was applied successfully or not.

         The request can also be used to trigger a file download or file install to
         multiple devices.  In the case of an install, if the url matches a file that
         was already received via a download, then no additional download will be
         performed before the installer is invoked.

         In the acknowledgement, devices include the MessageRefId of this messageid.
    -->
    <xs:element name="UpdateDeviceConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>

                        <!-- Type of request. -->
                        <xs:element name="RequestType" type="v1_0:DeviceUpdateType"/>

                        <!-- For download or install, where's the file coming from. -->
                        <xs:element name="FileUrl" type="xs:string"/>

                        <!-- List of one or more device id's. -->
                        <xs:element name="Devices" type="v1_0:DeviceId" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="UpdateConcentratorConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="RequestType" type="v1_0:ConcentratorRequestType"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="ConcentratorRequestType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="UpdateRoutes"/>
            <xs:enumeration value="BalanceFloor"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="Event">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Type" type="xs:string"/>
                        <xs:element name="Data" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ConcentratorShutdown">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- List of one or more convention events and room directions -->
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
     ======================================= SLOTS =========================================
    -->

    <xs:complexType name="PatronTier">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Name" type="v1_0:Name"/>
            <xs:element name="Description" type="v1_0:Description"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="LevelUpdateType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="RetireLevel"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="UpdateLevelConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>

                        <!-- Type of request -->
                        <xs:element name="RequestType" type="v1_0:LevelUpdateType"/>

                        <!-- List of one or more level Ids -->
                        <xs:element name="Levels" type="xs:int" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CardInserted">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Card" type="v1_0:IdCard"/>
                        <xs:element name="IsPatronCard" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="SASValidationStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="StandardOrNone"/>
            <xs:enumeration value="System"/>
            <xs:enumeration value="SecureEnhanced"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="SASDiscovery">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Address" type="xs:int"/>
                <xs:element name="GameId" type="xs:string"/>
                <xs:element name="SASVersion" type="xs:string"/>
                <xs:element name="SerialNumber" type="xs:string"/>
                <xs:element name="AssetNumber" type="xs:string"/>
                <xs:element name="AccountingDenomination" type="v1_0:Currency"/>
                <xs:element name="MultiDenomEnabled" type="xs:boolean"/>
                <xs:element name="ExtendedMetersEnabled" type="xs:boolean"/>
                <xs:element name="AFTEnabled" type="xs:boolean"/>
                <xs:element name="AFTBonusEnabled" type="xs:boolean"/>
                <xs:element name="AFTInHouseEnabled" type="xs:boolean"/>
                <xs:element name="LegacyBonusEnabled" type="xs:boolean"/>
                <xs:element name="EFTTransferToEnabled" type="xs:boolean"/>
                <xs:element name="EFTTransferFromEnabled" type="xs:boolean"/>
                <xs:element name="ValidationExtensionsSupported" type="xs:boolean" minOccurs="0"/>
                <xs:element name="ValidationStyle" type="v1_0:SASValidationStyle" minOccurs="0"/>
                <!-- SAS level group id / MS25 link id. -->
                <xs:element name="ProgressiveGroup" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="RebootInformation">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Expected" type="xs:boolean"/>
                <xs:element name="FromOneLink" type="xs:boolean"/>
                <xs:element name="Username" type="xs:string" minOccurs="0"/>
                <xs:element name="Description" type="xs:string" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="Features">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Playlists" type="xs:boolean"/>
                <xs:element name="DownloadableFirmware" type="xs:boolean"/>
                <xs:element name="RemoteReboot" type="xs:boolean"/>
                <xs:element name="IMM" type="xs:boolean"/>
                <xs:element name="PromoGames" type="xs:boolean"/>
                <xs:element name="PrizeJackpot" type="xs:boolean"/>
                <xs:element name="SlotsContent" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- ICard discovery message. -->
    <xs:element name="ICardConfigurationRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfigurationRequest">
                    <xs:sequence>
                        <xs:element ref="v1_0:SASDiscovery" minOccurs="0"/>
                        <xs:element ref="v1_0:ICardConfiguration"/>
                        <xs:element minOccurs="0" name="MS25Discovery" type="v1_0:MS25Protocol"/>
                        <xs:element minOccurs="0" name="ASPDiscovery" type="v1_0:ASPProtocol"/>
                        <xs:element ref="v1_0:RebootInformation"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- ICard discovery message. -->
    <xs:element name="ICardConfigurationRequest5">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfigurationRequest">
                    <xs:sequence>
                        <!-- An ICard has from zero to many games (> 1 means multigame/multidenom). -->
                        <xs:element name="Games" type="v1_0:ICardGame5" maxOccurs="unbounded"/>
                        <xs:element ref="v1_0:SASDiscovery" minOccurs="0"/>
                        <xs:element minOccurs="0" name="MS25Discovery" type="v1_0:MS25Protocol"/>
                        <xs:element minOccurs="0" name="ASPDiscovery" type="v1_0:ASPProtocol"/>
                        <xs:element minOccurs="0" name="G2SDiscovery" type="v1_0:G2SProtocol"/>
                        <xs:element ref="v1_0:RebootInformation"/>
                        <xs:element ref="v1_0:Features"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Interface card configuration. -->
    <xs:complexType name="EGMProtocol"/>

    <!-- Which SAS bonusing method an ICard uses for all bonus awards. -->
    <xs:simpleType name="ICardBonusPaymentMethod">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SasLegacyBonus"/>
            <xs:enumeration value="SasAFTBonus"/>
            <xs:enumeration value="SasAFTInHouseBonus"/>
            <xs:enumeration value="SasEFTBonus"/>
            <xs:enumeration value="MS25Mystery"/>
            <xs:enumeration value="ASPBonus"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="SASProtocol">
        <xs:complexContent>
            <xs:extension base="v1_0:EGMProtocol">
                <xs:sequence>
                    <!-- SAS address, autodetected by icard but here for verification. -->
                    <xs:element name="NodeId" type="xs:int"/>

                    <!-- Preferred/User-selected Bonusing method. -->
                    <xs:element name="MethodOfPayment" type="v1_0:ICardBonusPaymentMethod"/>

                    <!-- SAS EGMs that are using AFT as the bonusing method can attempt to lock the EGM
                         for the transfer. In fact some EGMs require it. Setting should be ignored if
                         using Legacy Bonusing or EFT for the transfer.                                 -->
                    <xs:element name="UseAFTLockOnTransfers" type="xs:boolean" minOccurs="0" maxOccurs="1"/>

                    <!-- SAS level group id / MS25 link id. -->
                    <xs:element name="ProgressiveGroup" type="xs:int"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MS25Protocol">
        <xs:complexContent>
            <xs:extension base="v1_0:EGMProtocol">
                <xs:sequence>
                    <!-- If we detect ms25, we will definitely know the slot id. -->
                    <xs:element name="SlotId" type="xs:int"/>

                    <!-- The link id may or may not have been automatically detected. -->
                    <xs:element name="LinkId" type="xs:int" nillable="true"/>

                    <!-- Whether mystery pay is enabled or not ... may not be automatically detected. -->
                    <xs:element name="MysteryPayAvailable" type="xs:boolean" nillable="true"/>

                    <!-- Whether extension 'B' enabled or not ... may not be automatically detected. -->
                    <xs:element name="ExtensionsBAvailable" type="xs:boolean" nillable="true"/>

                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ASPProtocol">
        <xs:complexContent>
            <xs:extension base="v1_0:EGMProtocol">
                <xs:sequence>
                    <!--  8 character string. -->
                    <xs:element name="FirmwareID" type="xs:string"/>

                    <!--  20 character string. -->
                    <xs:element name="FirmwareName" type="xs:string"/>

                    <xs:element name="GameId" type="xs:string"/>
                    <xs:element name="SerialNumber" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="G2SProtocol">
        <xs:complexContent>
            <xs:extension base="v1_0:EGMProtocol">
                <xs:sequence>
                    <xs:element name="GameId" type="xs:string"/>
                    <xs:element name="AssetNumber" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- A single game (theme + denom) within a machine.  Some machines support multi-game, some multi-denom,
         or a combination of these.  Some games are single game/single denom, but have multiple paytables that
         report as multi-game via SAS.  Even an ICard with a single game/single denom will then have a single
         ICardGame record. -->
    <xs:complexType name="ICardGame">
        <xs:sequence>
            <!-- The one link ID for the game. -->
            <xs:element name="GameId" type="xs:long"/>

            <!-- The game number as known to the game (for SAS, '0000'-'9999'). For non-multigame, will be zero. -->
            <xs:element name="GameNumber" type="xs:int"/>

            <!-- The game denomination of this game (NOT the accounting denom which is on the ICardConfiguration). -->
            <xs:element name="Denomination" type="v1_0:Currency"/>

            <!-- The coin in meter for this game, when the game reports up to One Link. Null when sent from One Link to the game. -->
            <xs:element name="CoinInMeter" type="v1_0:Currency"/>

            <!-- Max wager in credits - value in currency depends on current credit denom (NOT accounting denom). -->
            <xs:element name="MaxBetCredits" type="xs:int"/>

            <!-- Theoretical base pay back percentage for maximum bet.  -->
            <xs:element name="TheoPercentage" type="v1_0:Percentage"/>

            <!-- Zero or more bonus/progressive levels attached to this game. -->
            <xs:element name="Levels" type="v1_0:ICardGameLevel" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- A single game (theme + denom) within a machine.  Some machines support multi-game, some multi-denom,
     or a combination of these.  Some games are single game/single denom, but have multiple paytables that
     report as multi-game via SAS.  Even an ICard with a single game/single denom will then have a single
     ICardGame record. -->
    <xs:complexType name="ICardGame5">
        <xs:sequence>
            <!-- The game number as known to the game (for SAS, '0000'-'9999'). For non-multigame, will be zero. -->
            <xs:element name="GameNumber" type="xs:int"/>

            <!-- The game denomination of this game (NOT the accounting denom which is on the ICardConfiguration). -->
            <xs:element name="Denomination" type="v1_0:Currency"/>

            <!-- Max wager in credits - value in currency depends on current credit denom (NOT accounting denom). -->
            <xs:element name="MaxBetCredits" type="xs:int"/>

            <!-- Theoretical base pay back percentage for maximum bet.  -->
            <xs:element name="TheoPercentage" type="v1_0:Percentage"/>

            <!-- Optional game name created from the sas game configuration.  -->
            <xs:element name="GameName" type="xs:string"/>

            <!-- paytable from sas game configuration.  -->
            <xs:element name="Paytable" type="xs:string"/>

            <!-- Query poker cards?  -->
            <xs:element name="QueryCards" type="xs:boolean"/>

            <!-- Zero or more bonus/progressive levels attached to this game. -->
            <xs:element name="Levels" type="v1_0:ICardGameLevel" maxOccurs="unbounded"/>

            <!-- Protocol Level Ids reported by machine.  -->
            <xs:element name="DiscoveredLevelIds" type="xs:string" minOccurs="0"/>

        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ICardGameLevel">
        <xs:sequence>
            <!-- The level configuration data. -->
            <xs:element name="LevelId" type="xs:long"/>

            <!-- The id assigned to the level for transmission to the egm -->
            <xs:element name="LevelSequence" type="xs:int"/>
            <xs:element name="Incrementation" type="v1_0:Percentage"/>
            <xs:element name="ResetValue" type="v1_0:Currency"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PromoGameDeviceAddress">
        <xs:sequence>
            <xs:element name="SourceAddress" type="xs:string"/>
            <xs:element name="DeviceId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ICardConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfiguration">
                    <xs:sequence>
                        <!-- Accounting denom of the device for converting credit values to currency values -->
                        <xs:element name="AccountingDenomination" type="v1_0:Currency"/>

                        <!-- EGM serial number -->
                        <xs:element name="SerialNumber" type="xs:string"/>

                        <!-- game manufacturer/platform code as detected by SAS if there is one -->
                        <xs:element name="PlatformCode" type="xs:string" minOccurs="0"/>

                        <!-- An ICard has zero to many levels.  Games will reference these by LevelId. -->
                        <xs:element name="Levels" type="v1_0:Level" maxOccurs="unbounded"/>

                        <!-- An ICard has from zero to many games (> 1 means multigame/multidenom). -->
                        <xs:element name="Games" type="v1_0:ICardGame" maxOccurs="unbounded"/>

                        <!-- SAS level group id / MS25 link id. -->
                        <xs:element name="ProgressiveGroup" type="xs:int"/>

                        <!-- If the ICard should talk to a game, which protocol and what are the options. -->
                        <xs:element name="EGMProtocol" type="v1_0:EGMProtocol"/>

                        <!-- Media Configration of the promo game device configured on the machine -->
                        <xs:element name="PromoGameDevice" type="v1_0:PromoGameDeviceAddress" minOccurs="0"/>

                        <!-- An ICard has from zero to many games (> 1 means multigame/multidenom). -->
                        <xs:element name="IMMLevels" type="v1_0:IMMLevel" maxOccurs="unbounded"/>
                        <!-- does this machine meter celebrate machine wins on the bank level -->
                        <xs:element name="MeterBankLevel" type="xs:boolean"/>
                        <!-- does this machine meter celebrate machine wins on if it's the machine it's connected to -->
                        <xs:element name="MeterMachineOnly" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ICardConfiguration5">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfiguration">
                    <xs:sequence>
                        <!-- One Link's view of the configured games, possibly with a different max-bet -->
                        <xs:element name="Games" type="v1_0:ICardGame5" maxOccurs="unbounded"/>

                        <!-- An ICard has zero to many levels.  Games will reference these by LevelId. -->
                        <xs:element name="Levels" type="v1_0:ICardLevel" maxOccurs="unbounded" minOccurs="0"/>

                        <!-- Protocol Type of the Game -->
                        <xs:element name="ProtocolType" type="v1_0:EGMProtocolType"/>

                        <!-- Progressive Group/Link Id for SAS/MS25 -->
                        <xs:element name="ProgressiveGroupId" type="xs:int"/>

                        <!-- Preferred bonusing method, possibly null -->
                        <xs:element name="PaymentMethod" type="v1_0:ICardBonusPaymentMethod"/>

                        <!-- SAS EGMs that are using AFT as the bonusing method can attempt to lock the EGM
                         for the transfer. In fact some EGMs require it. Setting should be ignored if
                         using Legacy Bonusing or EFT for the transfer.                                 -->
                        <xs:element name="UseAFTLockOnTransfers" type="xs:boolean" minOccurs="0" maxOccurs="1"/>

                        <!-- Levels designated to transmit out the IMM serial port (for LED displays)  -->
                        <xs:element name="IMMLevels" type="v1_0:IMMLevel" maxOccurs="unbounded" minOccurs="0"/>

                        <!-- Only transmit IMM winner events for wins *on this bank*  -->
                        <xs:element name="MeterBankLevel" type="xs:boolean"/>

                        <!-- Only transmit IMM winner events for wins *on this machine*  -->
                        <xs:element name="MeterMachineOnly" type="xs:boolean"/>

                        <!-- Content server root url ... append actual filename to this base. -->
                        <xs:element name="ContentHttpUrl" type="xs:string" minOccurs="0"/>

                        <!-- Slots Content server root url ... append actual filename to this base. -->
                        <xs:element name="SlotsContentUrl" type="xs:string" minOccurs="0"/>

                        <!-- Optional playlist, if device supports it and one is configured in the system. -->
                        <xs:element name="Playlist" type="v1_0:Playlist" minOccurs="0"/>

                        <!-- When a jackpot hit comes in, lock the game and wait for a MachineLockEvent message with lock = false -->
                        <xs:element name="LockMachinesOnHit" type="xs:boolean"/>

                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="EGMProtocolType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ms25"/>
            <xs:enumeration value="sas"/>
            <xs:enumeration value="asp"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="ICardEvent">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:DeviceEvent">
                    <xs:sequence>
                        <!-- SAS, MS25 ... helps UI decipher the event code properly. -->
                        <xs:element name="EGMProtocolType" type="v1_0:EGMProtocolType"/>

                        <!-- Optional - raw SAS/MS25/ASP etc event code, in decimal. -->
                        <xs:element name="EGMEventCode" type="xs:string" minOccurs="0" maxOccurs="1"/>

                        <!-- Optional - name/description of event -->
                        <xs:element name="EventDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- A level identifier. -->
    <xs:element name="LevelId" type="xs:int"/>

    <!-- Full level definition, as used by a controller to implement the level. -->
    <xs:complexType name="Level">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Version" type="xs:long"/>
            <xs:element name="BaseValue" type="v1_0:Currency"/>
            <xs:element name="InitializedValue" type="v1_0:Currency"/>
            <xs:element name="CurrentValue" type="v1_0:Currency"/>
            <xs:element name="Payable" type="v1_0:Payable"/>
            <xs:element name="MaxBet" type="xs:boolean"/>
            <xs:element name="AccountingOnly" type="xs:boolean"/>
            <xs:element name="CoinInAccrued" type="v1_0:Currency"/>
            <xs:element name="CoinInDebitAdjustment" type="v1_0:Currency"/>
            <xs:element name="CoinInCreditAdjustment" type="v1_0:Currency"/>
            <xs:element name="LevelIncrements" type="v1_0:LevelIncrement" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="HiddenResetMin" type="v1_0:Currency"/>
            <xs:element name="HiddenResetMax" type="v1_0:Currency"/>
            <xs:element name="HiddenResetCap" type="v1_0:Currency"/>
            <xs:element name="MinimumJackpotStreamTime" type="xs:int"/>
            <xs:element name="MaximumJackpotStreamTime" type="xs:int"/>
            <xs:element name="TotalIncrementPercentage" type="v1_0:Currency"/>
            <xs:element name="StartUpPercentage" type="v1_0:Currency"/>
            <xs:element name="Bcv" type="v1_0:Currency"/>
            <xs:element name="HitProbability" type="xs:string"/>
            <xs:element name="TotalRTP" type="xs:decimal"/>
            <xs:element name="HitProbabilityPrecision" type="xs:int"/>
            <xs:element name="HitProbabilityRoundingMethod" type="xs:string"/>
            <xs:element name="IncStartUpRTPPrecision" type="xs:int"/>
            <xs:element name="IncStartUpRTPRoundingMethod" type="xs:string"/>
            <xs:element name="IncludeStartUp" type="xs:boolean"/>
            <xs:element name="Pte" type="xs:boolean"/>
            <xs:element name="PteAnticipationSeconds" type="xs:int"/>
            <xs:element name="PteEndingSeconds" type="xs:int"/>
            <xs:element name="PteResultMinutes" type="xs:int"/>
            <xs:element name="ImageName" type="xs:string"/>
            <xs:element name="LeaderboardReminderDuration" type="xs:long"/>
            <xs:element name="LeaderboardReminderDelay" type="xs:long"/>
            <xs:element name="EligibilityTimeOutSeconds" type="xs:int"/>
            <xs:element name="AtiProgressive" type="xs:boolean"/>
            <xs:element name="LevelType" type="v1_0:ICardLevelType"/>
            <xs:element name="EligibilityRequirement" type="v1_0:PatronMetric"/>
            <xs:element name="CurrentIncrement" type="v1_0:Currency"/>
            <xs:element name="HiddenIncrement" type="v1_0:Currency"/>
            <xs:element name="MinorIncrement" type="v1_0:Currency"/>
            <xs:element name="WideArea" type="xs:boolean"/>
            <xs:element name="ReadOnly" type="xs:boolean"/>
            <xs:element name="RemoteLevelId" type="xs:int"/>
            <xs:element name="CreatedBy" type="xs:string"/>
            <xs:element name="ValidForRTPCheck" type="xs:boolean"/>
            <xs:element name="Active" type="xs:boolean"/>
            <xs:element name="Effective" type="xs:boolean"/>
            <xs:element name="LifetimeCoinIn" type="v1_0:Currency"/>
            <xs:element name="Hiddens" type="v1_0:HiddenLevel" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="PatronTiers" type="v1_0:PatronTier" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Channel" type="v1_0:MessageChannel"/>
            <xs:element name="Info" type="xs:string" minOccurs="0"/>
            <xs:element name="Name" type="xs:string" minOccurs="0"/>
            <xs:element name="LevelStatus" type="v1_0:LevelStatus"/>
            <xs:element name="AwardType" type="v1_0:AwardType"/>
            <xs:element name="Tag" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="ICardLevelType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Standard"/>
            <xs:enumeration value="Bonus"/>
            <xs:enumeration value="AccountingOnly"/>
            <xs:enumeration value="PalcomX"/>
            <xs:enumeration value="Escrow"/>
            <xs:enumeration value="External"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ICardLevel">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Version" type="xs:long"/>
            <xs:element name="Type" type="v1_0:ICardLevelType"/>
            <xs:element name="Channel" type="v1_0:MessageChannel"/>
            <xs:element name="Info" type="xs:string" minOccurs="0"/>
            <xs:element name="Name" type="xs:string" minOccurs="0"/>
            <xs:element name="MediaMinSeconds" type="xs:int"/>
            <xs:element name="MediaMaxSeconds" type="xs:int"/>
            <xs:element name="AnticipationContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="CelebrationContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="OdometerContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="PromoGameContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="LevelUnlockedContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="EndingSoonContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="LeaderboardContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="FinalResultsContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="PokerMinorPromoGameContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="PokerMinorCelebrationContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="MinorAwards" type="v1_0:MinorAward" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SlotsContentPackage">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Type" type="v1_0:SlotsContentType"/>
            <xs:element name="CompactContent" type="v1_0:SlotsContentFile" minOccurs="0"/>
            <xs:element name="LcdContent" type="v1_0:SlotsContentFile" minOccurs="0"/>
            <xs:element name="MediaWindowSideContent" type="v1_0:SlotsContentFile" minOccurs="0"/>
            <xs:element name="MediaWindowBottomContent" type="v1_0:SlotsContentFile" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="SlotsContentType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Anticipation"/>
            <xs:enumeration value="Celebration"/>
            <xs:enumeration value="Odometer"/>
            <xs:enumeration value="PTE_LevelUnlocked"/>
            <xs:enumeration value="PTE_EndingSoon"/>
            <xs:enumeration value="PTE_Leaderboard"/>
            <xs:enumeration value="PTE_FinalResults"/>
            <xs:enumeration value="PromoGame"/>
            <xs:enumeration value="Unknown"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="MinorAward">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Sequence" type="xs:int"/>
            <xs:element name="Table" type="v1_0:PromoGamePaytable"/>
            <xs:element name="TriggerValueMinimum" type="v1_0:Currency"/>
            <xs:element name="TriggerValueMaximum" type="v1_0:Currency"/>
            <xs:element name="TriggerValueAverage" type="v1_0:Currency"/>
            <xs:element name="MethodOfPayment" type="v1_0:MethodOfPayment"/>
            <xs:element name="AwardType" type="v1_0:AwardType"/>
            <xs:element name="Eligibility" type="v1_0:PatronMetric" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="MeetAllCriteria" type="xs:boolean"/>
            <xs:element name="ClaimableDuration" type="xs:long"/>
            <xs:element name="ExternalAwardId" type="xs:string"/>
            <xs:element name="ExternalAwardName" type="xs:string"/>
            <xs:element name="ExternalAwardValue" type="v1_0:Currency"/>
            <xs:element name="PromoGameContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="CelebrationContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="PlayerWinLimit" type="xs:int"/>
            <xs:element name="PlayerWinLimitType" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SlotsContentFile">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="FileName" type="xs:string"/>
            <xs:element name="MD5" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IMMLevel">
        <xs:sequence>
            <xs:element name="LevelId" type="xs:int" minOccurs="0"/>
            <xs:element name="SequenceId" type="xs:int" minOccurs="0"/>
            <xs:element name="SignId" type="xs:int" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Allows definition of how and in what units a bonus should be paid -->
    <xs:complexType name="Payable">
        <xs:sequence>
            <xs:element name="MethodOfPayment" type="v1_0:MethodOfPayment"/>
            <xs:element name="AwardType" type="v1_0:AwardType"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Type of award payment -->
    <xs:simpleType name="AwardType">
        <xs:restriction base="xs:string">
            <!-- Pay award as unrestricted cashable credits to the EGM or other device. -->
            <xs:enumeration value="CashableCredits"/>

            <!-- Pay award as restricted "play-only" credits to the EGM or other device. -->
            <xs:enumeration value="RestrictedCredits"/>

            <!-- Pay award as non-restricted cashable credits to trhe EGM or other device (from SAS protocol, may not be useful otherwise)-->
            <xs:enumeration value="NonRestrictedCredits"/>

            <!-- Pay award as points to a player account or some device that accepts them. -->
            <xs:enumeration value="Points"/>

            <!-- Trigger only, used for Barneys to only increment the CoinInHitTrigger counter ... ? -->
            <xs:enumeration value="TriggerOnly"/>

            <!-- Pay award to a player's freeplay account. -->
            <xs:enumeration value="Freeplay"/>

            <!-- Pay award to a player's comps account. -->
            <xs:enumeration value="Comps"/>

            <!-- Pay award as a non-cash prize -->
            <xs:enumeration value="Prize"/>

            <!-- Pay award as a campaign offer from Marketing Manager directly to device -->
            <xs:enumeration value="Offer"/>
            <!-- Pay award as a Virtual Drawing Multiplier  -->
            <xs:enumeration value="VirtualDrawingsMultiplier"/>
            <!-- Pay award as a Virtual Drawing Entries  -->
            <xs:enumeration value="VirtualDrawingsEntries"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Method of payment on a level. -->
    <xs:simpleType name="MethodOfPayment">
        <xs:restriction base="xs:string">
            <!-- Have the icard award the bonus through the EGM. -->
            <xs:enumeration value="PayToGame"/>

            <!-- Deprecated - should not be used in One Link version 5.1 and greater -->
            <!-- Have the icard award the bonus through the EGM. Force a lock on the game for a time period or until a message is recieved cancelling the lock -->
            <!-- <xs:enumeration value="PayToGameWithGameLock"/>    -->

            <!-- Have the icard award the bonus through the EGM, forcing an attendant handpay, regardless of bonus amount -->
            <xs:enumeration value="PayToGameWithHandPay"/>

            <!-- Award the bonus via the player tracking system as ... ? -->
            <xs:enumeration value="PayToPlayerAccount"/>

            <!-- Trigger only, used for Barneys to only increment the CoinInHitTrigger counter ... ? -->
            <xs:enumeration value="TriggerOnly"/>

            <!-- Award the bonus via the promo game device ... ? -->
            <xs:enumeration value="PayToPromoGameDevice"/>

            <!-- Claimable, used to award non-cash prizes or other awards that must be claimed at another location, rather than paid to the game. -->
            <xs:enumeration value="Claimable"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="JackpotType">
        <!-- One for each type of JackpotTrigger implementation class,
            plus the standard progressive trigger. -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="StandardProgressive"/>
            <xs:enumeration value="Bonus"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="JackpotTriggerType">
        <!-- One for each type of JackpotTrigger implementation class,
            plus the standard progressive trigger. -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="PayLineTrigger"/>
            <xs:enumeration value="CoinInTrigger"/>
            <xs:enumeration value="CoinInHitTrigger"/>
            <xs:enumeration value="ValueTrigger"/>
            <xs:enumeration value="FrequencyTrigger"/>
            <xs:enumeration value="ScheduledRangeTrigger"/>
            <xs:enumeration value="PokerFrenzyTrigger"/>
            <xs:enumeration value="PokerFrenzyTriggerMinor"/>
            <xs:enumeration value="CriteriaTrigger"/>
            <xs:enumeration value="TimeBasedTrigger"/>
            <xs:enumeration value="PromoGameProgressive"/>
            <xs:enumeration value="ScatterTrigger"/>
            <xs:enumeration value="PlayXGetYTrigger"/>
            <xs:enumeration value="JackpotOnDemandTrigger"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="BonusLevel">
        <xs:complexContent>
            <xs:extension base="v1_0:Level">
                <xs:sequence>
                    <xs:element name="WinDelayMinimum" type="xs:long"/>
                    <xs:element name="WinDelayMaximum" type="xs:long"/>
                    <xs:element name="PromoGameProgressive" type="xs:boolean"/>
                    <xs:element name="GroupId" type="xs:string"/>
                    <xs:element name="GroupName" type="xs:string"/>
                    <xs:element name="SpecifyGroups" type="xs:boolean"/>
                    <xs:element name="ClaimableDuration" type="xs:long"/>
                    <xs:element name="PrizeDescription" type="xs:string"/>
                    <xs:element name="OfferId" type="xs:string"/>
                    <xs:element name="OfferName" type="xs:string"/>
                    <xs:element name="HitCountMinimum" type="xs:long"/>
                    <xs:element name="HitCountMaximum" type="xs:long"/>
                    <xs:element name="CurrentHitCount" type="xs:long"/>
                    <xs:element name="MachineGroup" type="v1_0:MachineGroup"/>
                    <xs:element name="JackpotTriggers" type="v1_0:JackpotTrigger" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="AnticipationContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="CelebrationContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="OdometerContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="PromoGameContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="LevelUnlockedContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="EndingSoonContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="LeaderboardContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="FinalResultsContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="WaAwardModel" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HiddenLevel" final="restriction">
        <xs:complexContent>
            <xs:extension base="v1_0:Level">
                <xs:sequence>
                    <xs:element name="ParentLevelId" type="xs:long"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="LevelIncrement">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Version" type="xs:long"/>
            <xs:element name="ThresholdValue" type="v1_0:Currency"/>
            <xs:element name="IncrementPercentage" type="v1_0:Percentage"/>
            <xs:element name="CurrentValue" type="v1_0:Currency"/>
            <xs:element name="InitializedValue" type="v1_0:Currency"/>
            <xs:element name="LifetimeCoinIn" type="v1_0:Currency"/>
            <xs:element name="HiddenIncrementPercentage" type="v1_0:Currency"/>
            <xs:element name="MinorIncrementPercentage" type="v1_0:Currency"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="JackpotTrigger" abstract="true">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="LevelId" type="xs:long"/>
            <xs:element name="MinorAwards" type="v1_0:MinorAward" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--Trigger Bonusing Method -->
    <xs:simpleType name="TriggerBonusMethod">
        <xs:restriction base="xs:string">
            <!--Standard Random Rewards Bonusing (i.e Barneys and Freds)  -->
            <xs:enumeration value="Standard"/>

            <!--Trigger only, used for Barneys to only increment the CoinInHitTrigger counter ... ? -->
            <xs:enumeration value="TriggerOnly"/>

            <!--Frenzy Random Rewards. Count Barneys until time for a Fred to hit, pay the Fred, then award everyone else a Barney -->
            <xs:enumeration value="Frenzy"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Payout">
        <xs:sequence>
            <xs:element name="Rank" type="v1_0:Rank"/>
            <xs:element name="Suits" type="xs:string"/>
            <xs:element name="Kinds" type="xs:string"/>
            <xs:element name="Major" type="xs:string"/>
            <xs:element name="Minor" type="xs:string"/>
            <xs:element name="Rule" type="xs:string"/>
            <xs:element name="Name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Rank">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="SuitAvailable" type="xs:boolean"/>
            <xs:element name="KindAvailable" type="xs:boolean"/>
            <xs:element name="MajorMinorAvailable" type="xs:boolean"/>
            <xs:element name="RulesAvailable" type="xs:boolean"/>
            <xs:element name="CustomAvailable" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>

    <!--    <xs:simpleType name="HandEvaluator">
            <xs:restriction base="xs:string">
                <xs:enumeration value="Unknown"/>
                <xs:enumeration value="Discovery"/>
                <xs:enumeration value="Online"/>
                <xs:enumeration value="Offline"/>
                <xs:enumeration value="NTPOffline"/>
            </xs:restriction>
        </xs:simpleType>-->

    <xs:simpleType name="EligibilityMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="All"/>
            <xs:enumeration value="One"/>
            <xs:enumeration value="None"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="TriggerWithConsolation">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
                <xs:sequence>
                    <xs:element name="UseConsolationLimit" type="xs:boolean"/>
                    <xs:element name="MaxConsolationAwards" type="xs:int"/>
                    <xs:element name="UseConsolationProximity" type="xs:boolean"/>
                    <xs:element name="ConsolationProximity" type="xs:string"/>
                    <xs:element name="UseConsolationBudget" type="xs:boolean"/>
                    <xs:element name="MaxConsolationBudget" type="v1_0:Currency"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PokerFrenzyTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:TriggerWithConsolation">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="Payouts" type="v1_0:Payout"/>
                    <xs:element name="MinorValueMinimum" type="v1_0:Currency"/>
                    <xs:element name="MinorValueAverage" type="v1_0:Currency"/>
                    <xs:element name="MinorValueMaximum" type="v1_0:Currency"/>
                    <xs:element name="MajorValueMinimum" type="v1_0:Currency"/>
                    <xs:element name="MajorValueMaximum" type="v1_0:Currency"/>
                    <xs:element name="MajorPromoGamePaytable" type="v1_0:PromoGamePaytable"/>
                    <xs:element name="MinorPromoGamePaytable" type="v1_0:PromoGamePaytable"/>
                    <xs:element name="minorCelebrationContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="minorPromoGameContent" type="v1_0:SlotsContentPackage"/>
                    <xs:element name="ExternalAwardId" type="xs:string" minOccurs="0"/>
                    <xs:element name="ExternalAwardName" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CoinInTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:TriggerWithConsolation">
                <xs:sequence>
                    <xs:element name="CoinInAccrued" type="v1_0:Currency"/>
                    <xs:element name="CoinInDebits" type="v1_0:Currency"/>
                    <xs:element name="CoinInCredits" type="v1_0:Currency"/>
                    <xs:element name="HitCountMinimum" type="xs:long"/>
                    <xs:element name="HitCountMaximum" type="xs:long"/>
                    <xs:element name="CoinInThresholdMinimum" type="v1_0:Currency"/>
                    <xs:element name="CoinInThresholdAverage" type="v1_0:Currency"/>
                    <xs:element name="CoinInThresholdMaximum" type="v1_0:Currency"/>
                    <xs:element name="CurrentCoinInThreshold" type="v1_0:Currency"/>
                    <xs:element name="TriggerValueMinimum" type="v1_0:Currency"/>
                    <xs:element name="TriggerValueAverage" type="v1_0:Currency"/>
                    <xs:element name="TriggerValueMaximum" type="v1_0:Currency"/>
                    <xs:element name="FrenzyJackpotMinimum" type="v1_0:Currency"/>
                    <xs:element name="FrenzyJackpotMaximum" type="v1_0:Currency"/>
                    <xs:element name="CurrentTriggerValue" type="v1_0:Currency"/>
                    <xs:element name="CurrentHitCount" type="xs:long"/>
                    <xs:element name="TriggerBonusMethod" type="v1_0:TriggerBonusMethod"/>
                    <xs:element name="Payable" type="v1_0:Payable"/>
                    <xs:element name="MustHitBy" type="xs:boolean"/>
                    <xs:element name="MustHitByValue" type="v1_0:Currency"/>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="PatronTiers" type="v1_0:PatronTier"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ValueTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:TriggerWithConsolation">
                <xs:sequence>
                    <xs:element name="CurrentThresholdValue" type="v1_0:Currency"/>
                    <xs:element name="ValueThresholdMinimum" type="v1_0:Currency"/>
                    <xs:element name="ValueThresholdAverage" type="v1_0:Currency"/>
                    <xs:element name="ValueThresholdMaximum" type="v1_0:Currency"/>
                    <xs:element name="TimeCapStart" type="xs:dateTime"/>
                    <xs:element name="TimeCapEnd" type="xs:dateTime"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FrequencyTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
                <xs:sequence>
                    <xs:element name="Elapsed" type="xs:long"/>
                    <xs:element name="CurrentThresholdElapsed" type="xs:long"/>
                    <xs:element name="ElapsedThresholdMinimum" type="xs:long"/>
                    <xs:element name="ElapsedThresholdAverage" type="xs:long"/>
                    <xs:element name="ElapsedThresholdMaximum" type="xs:long"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ScheduledRangeTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
                <xs:sequence>
                    <xs:element name="CurrentThresholdTimestamp" type="xs:date"/>
                    <xs:element name="TimestampThresholdMinimum" type="xs:date"/>
                    <xs:element name="TimestampThresholdAverage" type="xs:date"/>
                    <xs:element name="TimestampThresholdMaximum" type="xs:date"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="JackpotTriggerSignal">
        <xs:sequence>
            <!--The trigger id as sent from One Link. -->
            <xs:element name="Id" type="xs:long"/>

            <!--The level id as sent from One Link. -->
            <xs:element name="LevelId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PokerFrenzyTriggerSignal">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTriggerSignal">
                <xs:sequence>
                    <xs:element name="DeviceId" type="xs:long"/>
                    <xs:element name="Cards" type="xs:string" minOccurs="0" maxOccurs="5"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SignalPokerFrenzyTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage">
                <xs:sequence>
                    <xs:element name="PokerFrenzyTrigger" type="v1_0:PokerFrenzyTriggerSignal"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PokerFrenzyWinningHand">
        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage">
                <xs:sequence>
                    <xs:element name="Cards" type="xs:string" minOccurs="0" maxOccurs="5"/>
                    <xs:element name="LevelId" type="xs:long"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CoinInTriggerSignal">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTriggerSignal"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ProgressiveLevelHit">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="LevelId" type="xs:long"/>
                        <xs:element name="HitValue" type="v1_0:Currency"/>
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PromoGameProgressiveHit">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="LevelId" type="xs:long"/>
                        <xs:element name="Information" type="xs:string"/>
                        <xs:element name="CardNumber" type="xs:string"/>
                        <xs:element name="PatronId" type="xs:long"/>
                        <xs:element name="PatronName" type="xs:string"/>
                        <xs:element name="PatronTier" type="xs:string"/>
                        <xs:element name="SessionId" type="xs:long"/>
                        <xs:element name="ParentJackpotId" type="xs:long"/>
                        <xs:element name="JackpotTriggerEventId" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="JackpotHitAccounting">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- A copy of the level right before reset (after a jackpot hit) -->
                        <xs:element name="Level" type="v1_0:Level"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- The id and adjustment value for a hidden level adjustment. -->
    <xs:complexType name="HiddenLevelAdjustment">
        <xs:sequence>
            <xs:element name="LevelId" type="xs:long"/>
            <xs:element name="AdjustmentValue" type="v1_0:Currency"/>
        </xs:sequence>
    </xs:complexType>


    <xs:element name="LevelAdjustment">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Level Id of the level to adjust -->
                        <xs:element name="LevelId" type="xs:long"/>
                        <!-- the amount to adjust the level by -->
                        <xs:element name="AdjustmentValue" type="v1_0:Currency"/>
                        <!-- The reason for the Adjustment -->
                        <xs:element name="Reason" type="xs:string"/>
                        <!-- The amount to adjust the hidden level by -->
                        <xs:element name="HiddenLevelAdjustmentValue" type="v1_0:Currency"/>
                        <!-- The amount to adjust the minor level by -->
                        <xs:element name="MinorLevelAdjustmentValue" type="v1_0:Currency"/>
                        <!-- The amount to adjust the overage by -->
                        <xs:element name="OverageAdjustmentValue" type="v1_0:Currency"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="LevelAdjusted">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Level Id of the level to adjust -->
                        <xs:element name="LevelId" type="xs:long"/>
                        <!-- the amount to adjust the level by -->
                        <xs:element name="AdjustmentValue" type="v1_0:Currency"/>
                        <!-- The reason for the Adjustment -->
                        <xs:element name="Reason" type="xs:string"/>
                        <!-- The amount to adjust the hidden level by -->
                        <xs:element name="HiddenLevelAdjustmentValue" type="v1_0:Currency"/>
                        <!-- The amount to adjust the overage by -->
                        <xs:element name="OverageAdjustmentValue" type="v1_0:Currency"/>
                        <!-- The amount to adjust the minor by -->
                        <xs:element name="MinorAdjustmentValue" type="v1_0:Currency"/>
                        <!-- True if meter variance indicator on the level needs to reset to false (for Accounting Only levels) -->
                        <xs:element name="ResetVarianceIndicator" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Adjustment">
        <xs:sequence>
            <!-- Level Id of the level to adjust -->
            <xs:element name="LevelId" type="xs:long"/>
            <!-- the amount to adjust the level by -->
            <xs:element name="AdjustmentValue" type="v1_0:Currency"/>
            <!-- The reason for the Adjustment -->
            <xs:element name="Reason" type="xs:string"/>
            <!-- The amount to adjust the hidden level by -->
            <xs:element name="HiddenLevelAdjustmentValue" type="v1_0:Currency"/>
            <!-- The amount to adjust the overage by -->
            <xs:element name="OverageAdjustmentValue" type="v1_0:Currency"/>
            <!-- The amount to adjust the minor by -->
            <xs:element name="MinorAdjustmentValue" type="v1_0:Currency"/>
            <!-- True if meter variance indicator on the level needs to reset to false (for Accounting Only levels) -->
            <xs:element name="ResetVarianceIndicator" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ActivateLevels">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Level Ids for the levels to activate. -->
                        <xs:element name="LevelId" type="xs:long" maxOccurs="unbounded"/>
                        <xs:element name="WALevelIds" type="xs:long" maxOccurs="unbounded"/>
                        <xs:element name="Adjustments" type="v1_0:Adjustment" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RetireLevel">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Level Id of the level to retire -->
                        <xs:element name="LevelId" type="xs:long"/>
                        <xs:element name="TransferLevelId" type="xs:long"/>
                        <xs:element name="Reason" type="xs:string"/>
                        <xs:element name="NetworkUpdateId" type="xs:long"/>
                        <xs:element name="User" type="xs:string"/>
                        <!-- hmm, what else.. maybe a date field (retire the level at this exact time?) -->
                        <!-- or maybe a boolean for "retire on next hit"? -->
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="LevelRetired">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The Level that was retired: with all of the current values at the time of the retirement -->
                        <xs:element name="Level" type="v1_0:Level"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- The current value of a particular level. -->
    <xs:complexType name="LevelValue">
        <xs:sequence>
            <xs:element ref="v1_0:LevelId"/>
            <xs:element name="Value" type="v1_0:Currency"/>
            <xs:element name="Name" type="xs:string"/>
            <!-- This value represents the total number of the jackpots that have been hit for this level. Only set for Fixed Time Based Mystery levels, currently -->
            <xs:element name="AwardsPaid" type="xs:int" minOccurs="0"/>
            <!-- This value represents the configured number of jackpots that should be hit for this level. Only set for Fixed Time Based Mystery levels, currently -->
            <xs:element name="NumberOfAwards" type="xs:int" minOccurs="0"/>
            <!-- This value represents the milliseconds since epoch that the countdown timer for the level started. Only set for Scatter Trigger levels, currently -->
            <xs:element name="CountdownStartTime" type="xs:long" minOccurs="0"/>
            <!-- This value represents the milliseconds since epoch that the countdown timer for the level is due to end. Only set for Scatter Trigger levels, currently -->
            <xs:element name="CountdownEndTime" type="xs:long" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- The randomly chosen award value of a given level jackpot trigger. -->
    <xs:complexType name="TriggerValue">
        <xs:sequence>
            <xs:element name="TriggerId" type="xs:long"/>
            <xs:element ref="v1_0:LevelId"/>
            <xs:element name="Value" type="v1_0:Currency"/>
            <xs:element name="UnroundedValue" type="v1_0:Currency"/>
            <xs:element name="TotalAccrued" type="v1_0:Currency"/>
            <xs:element name="Multiplier" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Message from ICard or other device asking the JPC to trigger a hit.  Sent
         when user hits a standard progressive or device decides to trigger a LinkedRandomRewards level
         for example.

         Sent as part of a coin-in for LinkedRandomRewards levels.

         Sent by itself for a progressive level.

          device LevelHitTrigger -> JPC
          JPC -> JackpotHit to device and onelink
          device JackpotPaid -> onelink
          device JackpotClear -> onelink
    -->


    <!-- A list of levels with their current values.

         This is the message sent via multicast every couple seconds for media odometers and MICs.
    -->
    <xs:element name="LevelBroadcast">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Zero or more level values.  -->
                        <xs:element maxOccurs="unbounded" name="LevelValues" type="v1_0:LevelValue"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="DeviceConfigurationDetail">
        <xs:choice>
            <xs:element ref="v1_0:ICardConfigurationRequest"/>
            <!--    Add more types here if it becomes worthwhile to expand
                    the DeviceConfigurationDetailsRequest/Response beyond ICard -->
        </xs:choice>
    </xs:complexType>

    <xs:element name="DeviceConfigurationDetailsRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="IncludeDiscoveryDetails" type="xs:boolean"/>
                        <xs:element name="IncludeOneLinkConfiguration" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="DeviceConfigurationDetailsResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="OriginatingMessageId" type="v1_0:MessageId" minOccurs="0"/>
                        <xs:element name="DeviceType" type="xs:string"/>
                        <xs:element name="DeviceConfigurationDetails" type="v1_0:DeviceConfigurationDetail"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Requests for SAS specific information and/or action from an EGM. -->
    <xs:complexType name="SASMessage">
        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage">
                <xs:sequence>
                    <xs:element name="OriginatingMessageId" type="v1_0:MessageId" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="EgmStateRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <!-- send true to enable EGM send false to disable EGM  -->
                        <xs:element name="Enable" type="xs:boolean"/>
                        <xs:element name="JackpotId" type="xs:long" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="EgmStateCode">
        <!-- Response codes for EGM Enable/Disable request. -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="Enabled"/>
            <xs:enumeration value="Disabled"/>
            <xs:enumeration value="AlreadyEnabled"/>
            <xs:enumeration value="AlreadyDisabled"/>
            <xs:enumeration value="EnableFailed"/>
            <xs:enumeration value="DisableFailed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="EgmStateResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <!-- send success for EGM enable/disable request -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="EgmStateCode" type="v1_0:EgmStateCode"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="SASMeter">
        <xs:sequence>
            <xs:element name="id" type="xs:int"/>
            <xs:element name="value" type="xs:long"/>
            <xs:element name="delta" type="xs:long"/>
            <xs:element name="oldValue" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="SASMeterValuesRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <!-- enumeration value indicating meter request type (automatic, manual, general exception generated). Can be used to correlate requests -->
                        <xs:element name="RequestType" type="xs:int"/>

                        <!-- a list of 0 or more individual SAS Meters being requested by SAS Merter Id -->
                        <xs:element name="SasMeterIds" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>

                        <!-- a list of 0 or more SAS Meters being requested by SAS Long Poll ID that
                        indicates the long poll used to get the meter(s) -->
                        <xs:element name="SasMeterLongPollId" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="SASMeterValues">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <!-- enumeration of  -->
                        <xs:element name="RequestType" type="xs:int"/>

                        <!-- if this is a response to a general exception, include the exception code that fired the message    -->
                        <xs:element name="GeneralExceptionCode" type="xs:int"/>

                        <!-- Zero or more SASMeters -->
                        <xs:element name="SasMeters" type="v1_0:SASMeter" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- AFT SAS Messages
         These messages closely resemble the SAS protocol for AFT
         Implememented in MegaMic but not being currenly used
    -->
    <xs:simpleType name="AftRegistrationKey">
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-fA-F0-9]{20}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="AftRegisterEgmRequestType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="RegisterEgm"/>
            <xs:enumeration value="UnregisterEgm"/>
            <xs:enumeration value="ReadCurrentRegistrationInfo"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="AftRegisterEgm">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="RegistrationRequest" type="v1_0:AftRegisterEgmRequestType"/>
                        <xs:element name="AssetNumber" type="xs:string"/>
                        <xs:element name="RegistrationKey" type="v1_0:AftRegistrationKey" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="PosId" type="xs:long" minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AftRegistrationInfo">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="RegistrationStatus" type="xs:int"/>
                        <xs:element name="AssetNumber" type="xs:string"/>
                        <xs:element name="RegistrationKey" type="v1_0:AftRegistrationKey"/>
                        <xs:element name="PosId" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AftError">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="OriginatingMessage" type="xs:string"/>
                        <xs:element name="Details" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AftLockRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="LockCode" type="xs:int"/>
                        <xs:element name="TransferConditionFlags" type="xs:int" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="LockTimeOut" type="xs:int" minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AftStatusRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AftLockAndStatusResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="GameLockStatus" type="xs:int"/>
                        <xs:element name="AvailableTransfersFlags" type="xs:int"/>
                        <xs:element name="HostCashoutStatusFlags" type="xs:int"/>
                        <xs:element name="AftStatusFlags" type="xs:int"/>
                        <xs:element name="MaxBufferIndex" type="xs:int"/>
                        <xs:element name="CurrentCashableAmount" type="xs:long"/>
                        <xs:element name="CurrentRestrictedAmount" type="xs:long"/>
                        <xs:element name="CurrentNonRestrictedAmount" type="xs:long"/>
                        <xs:element name="EGMTransferLimit" type="xs:long"/>
                        <xs:element name="RestrictedExpirationDateInMillis" type="xs:long"/>
                        <xs:element name="RestrictedPoolId" type="xs:int"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="ReceiptDataType">
        <xs:sequence>
            <xs:element name="TransferSourceOrDestination" type="xs:string"/>
            <xs:element name="TransferDateInMillis" type="xs:long"/>
            <xs:element name="PatronName" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="PatronAccountNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="AccountBalance" type="xs:long" minOccurs="0" maxOccurs="1"/>
            <!-- maybe use v1_0:Currency??? -->
            <xs:element name="DebitCardNumber" type="xs:int" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TransactionFee" type="xs:long" minOccurs="0" maxOccurs="1"/>
            <!-- maybe use v1_0:Currency??? -->
            <xs:element name="TotalDebitAmount" type="xs:long" minOccurs="0" maxOccurs="1"/>
            <!-- maybe use v1_0:Currency??? -->
        </xs:sequence>
    </xs:complexType>

    <xs:element name="AftInitiateTransferRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="AssetNumber" type="xs:string"/>
                        <xs:element name="TransferCode" type="xs:int"/>
                        <xs:element name="TransferType" type="xs:int"/>
                        <xs:element name="CashableAmount" type="v1_0:Currency"/>
                        <xs:element name="RestrictedAmount" type="v1_0:Currency"/>
                        <xs:element name="NonRestrictedAmount" type="v1_0:Currency"/>
                        <xs:element name="TransferFlags" type="xs:int"/>
                        <xs:element name="RegistrationKey" type="v1_0:AftRegistrationKey"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationDateInMillis" type="xs:long" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="PoolId" type="xs:int"/>
                        <xs:element name="ReceiptData" type="v1_0:ReceiptDataType" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="LockTimeout" type="xs:int"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AftInterrogateTransferRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="TransferCode" type="xs:int"/>
                        <xs:element name="TransactionIndex" type="xs:int"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AftTransferFundsResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="TransactionBufferPosition" type="xs:int"/>
                        <xs:element name="TransferStatus" type="xs:int"/>
                        <xs:element name="ReceiptStatus" type="xs:int" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="TransferType" type="xs:int" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="CashableAmount" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="RestrictedAmount" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="NonRestrictedAmount" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="TransferFlags" type="xs:int" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="AssetNumber" type="xs:long" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="TransactionDateInMillis" type="xs:long" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="ExpirationDateInMillis" type="xs:long" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="PoolId" type="xs:int" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="CumulativeCashableAmountMeter" type="v1_0:SASMeter" minOccurs="0"
                                    maxOccurs="1"/>
                        <xs:element name="CumulativeRestrictedAmountMeter" type="v1_0:SASMeter" minOccurs="0"
                                    maxOccurs="1"/>
                        <xs:element name="CumulativeNonRestrictedAmountMeter" type="v1_0:SASMeter" minOccurs="0"
                                    maxOccurs="1"/>

                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="EGMCommunicationDown">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"></xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- AFT Player Tracking to MegaMic Messaging -->
    <xs:element name="CashoutPressed">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="TransferFundsCommandType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TransferToEGM"/>
            <xs:enumeration value="TransferFromEGM"/>
            <xs:enumeration value="Interrogate"/>
            <xs:enumeration value="Cancel"/>
            <xs:enumeration value="Balance"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="TransferFundsRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="Command" type="v1_0:TransferFundsCommandType"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Cashable" type="v1_0:Currency"/>
                        <xs:element name="CashablePromotion" type="v1_0:Currency"/>
                        <xs:element name="NonCashablePromotion" type="v1_0:Currency"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="TransferFundsResponseCodeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Success"/>
            <xs:enumeration value="Pending"/>
            <xs:enumeration value="Failed"/>
            <xs:enumeration value="LockFailed"/>
            <xs:enumeration value="Timeout"/>
            <xs:enumeration value="Cancelled"/>
            <xs:enumeration value="Unknown"/>
            <xs:enumeration value="BalanceSuccess"/>
            <xs:enumeration value="BalanceFailed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="TransferFundsResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="ResponseCode" type="v1_0:TransferFundsResponseCodeType"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Cashable" type="v1_0:Currency"/>
                        <xs:element name="CashablePromotion" type="v1_0:Currency"/>
                        <xs:element name="NonCashablePromotion" type="v1_0:Currency"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- When the EGM reports exception 51 (handpay pending), the MegaMIC requests the handpay info sending
    type R command code 1B request. The response is sent to the concentrator. -->
    <xs:element name="HandpayInformationResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="ProgressiveGroup" type="xs:int"/>
                        <xs:element name="Level" type="xs:int"/>
                        <xs:element name="Amount" type="v1_0:Currency"/>
                        <xs:element name="PartialPay" type="v1_0:Currency"/>
                        <xs:element name="ResetId" type="xs:int"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Reset the handpay condition on the gaming machine remotely -->
    <xs:element name="ResetHandpayRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Response to a remote reset of the handpay condition on the gaming machine.
         Reset codes are:
         00 - Handpay was reset
         01 - Unable to reset handpay
         02 - Not currently in a handpay condition
    -->
    <xs:element name="ResetHandpayResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:SASMessage">
                    <xs:sequence>
                        <xs:element name="ResetCode" type="xs:int"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
            CoinIn

            Reported when a game is played and a cash value should be accrued to a jackpot level.

    -->
    <xs:complexType name="CoinInType">
        <xs:complexContent>
            <xs:extension base="v1_0:AbstractDeviceMessage">
                <xs:sequence>
                    <!-- The one link ID for the game the coin-in occurred on. -->
                    <xs:element name="GameId" type="xs:long"/>

                    <!-- The theoretical pay back percentage for this game as reported during discovery, null if unknown -->
                    <xs:element name="TheoPercentage" type="v1_0:Percentage"/>

                    <!-- The value of the wager, as the change to the coin-in-meter in accounting denom units.  -->
                    <xs:element name="Amount" type="v1_0:Currency"/>

                    <!-- The denomination used to determine the amount. -->
                    <xs:element name="Denomination" type="v1_0:Currency"/>

                    <!-- The new value of the coin-in meter, as the total coin-in-credits times the accounting denomination. -->
                    <xs:element name="CoinInMeter" type="v1_0:Currency"/>

                    <!-- Zero to many level id's on which to allegedly apply the amount. -->
                    <xs:element name="LevelIds" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>

                    <!-- Zero or more level hit notifications for the JPC to process.  -->
                    <xs:element name="JackpotTriggerSignals"
                                type="v1_0:JackpotTriggerSignal" minOccurs="0" maxOccurs="unbounded"/>

                    <!-- Zero or more linked random rewards "barney" bonus values as chosen by the ICard. -->
                    <xs:element name="TriggerValues" type="v1_0:TriggerValue" minOccurs="0" maxOccurs="unbounded"/>

                    <!-- Optional lists of SASMeters and/or SasMeterSets -->
                    <xs:element name="SASMeters" type="v1_0:SASMeter" minOccurs="0" maxOccurs="unbounded"/>

                    <!-- Optional initial 5-card poker hand, formatted such as "AS 4H 6C 7D 6H" -->
                    <xs:element name="PokerHand" type="xs:string" minOccurs="0" maxOccurs="1"/>

                    <!-- does this coin in message originate from a remote site -->
                    <xs:element name="Remote" type="xs:boolean"/>

                    <xs:element name="RemoteAssetNumber" type="xs:string"/>

                    <xs:element name="MaxBet" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--
    DEPRECATED since 5.5 (still handled in ONELINK for <= 5.4)
    -->
    <xs:element name="CoinIn">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:CoinInType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
    Game start event.
    -->
    <xs:element name="CoinIn5">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The 1-based game ID for the game the coin-in occurred on. -->
                        <xs:element name="GameNumber" type="xs:int"/>

                        <!-- The amount of cashable credits wagered.  -->
                        <xs:element name="Wager" type="v1_0:Currency"/>

                        <!-- The amount of restricted money wagered. -->
                        <xs:element name="Restricted" type="v1_0:Currency"/>

                        <!-- The token denomination wagered (ie, 0.25 for a 25 cent game). -->
                        <xs:element name="Denomination" type="v1_0:Currency"/>

                        <!-- Optional initial 5-card poker hand, formatted such as "AS 4H 6C 7D 6H" -->
                        <xs:element name="PokerHand" type="xs:string" minOccurs="0" maxOccurs="1"/>

                        <!-- Optional patron session associated with this event. -->
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>

                        <!-- Player session id, whether carded or uncarded.  Echoed back in JakcpotHit/BonusingAvailalbe to validate its the same player. -->
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>

                        <!-- When message comes from an external system, this should be true (e.g. in case of DNC, this comes from Everi) -->
                        <xs:element name="External" type="xs:boolean" minOccurs="0"/>

                        <!-- Theoretical base pay back percentage if this is an external coin in (e.g. in case of DNC, this comes from Everi)  -->
                        <xs:element name="ExternalTheoPercentage" type="v1_0:Percentage" minOccurs="0"/>

                        <!-- This (optional) flag indicates if the coin-in is a diff between EGM's CoinIn meter values
                        before ICard got disconnected from EGM (via SAS connection or another protocol) and after it
                        connects back again with EGM. These types of Coin In messages are generally treated in a special
                        way such as marking the Accounting Only Levels in One Link as potentially out of sync from actual
                        level meters on the EGM so that they can adjusted back manually by comparing value on EGM. -->
                        <xs:element name="EGMCommReconnect" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CardInserted5">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
    DEPRECATED since 5.5 (still handled in ONELINK for <= 5.4)
    -->
    <xs:element name="GameEnd">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The one link ID for the game the coin-in occurred on. -->
                        <xs:element name="GameId" type="xs:long"/>

                        <!-- Optional list of SASMeters -->
                        <xs:element name="SASMeters" type="v1_0:SASMeter" minOccurs="0" maxOccurs="unbounded"/>

                        <!-- Optional ending 5-card poker hand, formatted such as "AS 4H 6C 7D 6H" -->
                        <xs:element name="PokerHand" type="xs:string" minOccurs="0" maxOccurs="1"/>

                        <!-- Amount of the wager -->
                        <xs:element name="Amount" type="v1_0:Currency"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="GameEnd5">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The game number the coin-in occurred on. -->
                        <xs:element name="GameNumber" type="xs:int"/>

                        <!-- The token denomation, ie 0.25 for a 25 cent poker game. -->
                        <xs:element name="Denomination" type="v1_0:Currency"/>

                        <!-- The win amount ie coin-out paid to the player as the result of this game. (or null if not known) -->
                        <xs:element name="Win" type="v1_0:Currency"/>

                        <!-- Optional ending 5-card poker hand, formatted such as "AS 4H 6C 7D 6H" -->
                        <xs:element name="PokerHand" type="xs:string" minOccurs="0" maxOccurs="1"/>

                        <!-- Optional patron session associated with this event. -->
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>

                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>

                        <!-- When message comes from an external system, this should be true (e.g. in case of DNC, this comes from Everi) -->
                        <xs:element name="External" type="xs:boolean" minOccurs="0"/>

                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
    DEPRECATED as of 5.5 (still handled in ONELINK for <= 5.4 devices)
    -->
    <xs:element name="PatronGameActive">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- If the patron is in the middle of a game, could be in a bonus round for example. -->
                        <xs:element name="InGame" type="xs:boolean"/>

                        <!-- If known, are there credits on the meter. -->
                        <xs:element name="Credits" type="xs:int"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
    Status message sent from an ICard (megamic, ncompass) on regular interval (recommended 15 seconds).

    Should also be sent immediately when there's a major change of status, so ONELINK can synchronize its view
    of the player session with the ICard:
        * Card inserted
        * Card removed
        * Session timeout
    -->
    <xs:element name="ICardStatus">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Actively polling egm? ONELINK records online/offline comms events as it transitions. -->
                        <xs:element name="PollingActive" type="xs:boolean"/>

                        <!-- If there's an active (carded or uncarded) session.  Ie, credits on the meter even though no activity. Null if unknown (ie megamic). -->
                        <xs:element name="SessionActive" type="xs:boolean" minOccurs="0"/>

                        <!-- An id for the session, echoed back in any BonusingAvailable messages to validate they belong to the proper session.

                             Could be implemented by a simple 16 bit unsigned counter that overflows back to zero but should be persistent to avoid
                             starting at zero after a reboot.
                         -->
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>

                        <!-- The currently selected game number, if known. -->
                        <xs:element name="GameNumber" type="xs:int" minOccurs="0"/>

                        <!-- The token denomation, ie 0.25 for a 25 cent poker game. -->
                        <xs:element name="Denomination" type="v1_0:Currency" minOccurs="0"/>

                        <!-- If there is a carded session, the patron information associated with it. -->
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>

                        <!-- If receving multicast (ie, LevelBroadcast messages). Can set to 'true' if device doesn't
                         use multicast for some reason ... ONELINK is generating events/alerts based on this, so that
                         IT would know for example that multicast is not being received to a particular section of
                         the network.
                         -->
                        <xs:element name="MulticastActive" type="xs:boolean"/>
                        <!-- When message comes from an external system, this should be true -->
                        <xs:element name="External" type="xs:boolean" minOccurs="0"/>

                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
    PlayerUIPing is a ping from a player tracking ui device (that is NOT a SMIB).

    This is used to trigger a BonusingAvailable response if there is an active session
    on the associated game, similar to an ICardStatus.
    -->
    <xs:element name="PlayerUIPing">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Message sent from JPC to a device to award a jackpot, and also to One Link for reporting purposes. -->
    <xs:element name="JackpotHit">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The JPC-assigned identifier for this jackpot. -->
                        <xs:element name="JackpotId" type="xs:long"/>

                        <!-- The JPC-assigned identifier from the wide area system for this jackpot. -->
                        <xs:element name="RemoteJackpotId" type="xs:long"/>

                        <!-- The One Link device Id who was awarded the jackpot, can be 0 if only have asset number (must have one or the other) -->
                        <xs:element name="WinningDeviceId" type="v1_0:DeviceId"/>

                        <!-- The level the jackpot was hit against. -->
                        <xs:element ref="v1_0:LevelId"/>

                        <!-- The level name, for debugging or user notification. -->
                        <xs:element name="LevelName" type="xs:string"/>

                        <!-- The ID of the CoinInTrigger that triggered the award -->
                        <xs:element name="TriggerId" minOccurs="0" maxOccurs="1" type="xs:long"/>

                        <!-- The difference between the jackpot amount versus any additional incrementation. -->
                        <xs:element name="OverageAdjustment" type="v1_0:Currency"/>

                        <!-- The amount awarded. -->
                        <xs:element name="Amount" type="v1_0:Currency"/>

                        <!-- The denomination used to determine the amount. -->
                        <xs:element name="Denomination" type="v1_0:Currency"/>

                        <!-- The original amount before the game derived amount using the denomination. -->
                        <xs:element name="OriginalAmount" type="v1_0:Currency"/>

                        <!-- The type of this jackpot (progressive or bonus. -->
                        <xs:element name="JackpotType" type="v1_0:JackpotType"/>

                        <!-- The type of trigger that fired this jackpot. -->
                        <xs:element name="JackpotTriggerType" type="v1_0:JackpotTriggerType"/>

                        <!-- Whether to skip eligibility checks, for a bonus award.  Bonus awards as a
                             result of a side-game need to be paid ASAP, even though the game may be
                             idle (since the player is playing the side-game device).  Also, value-mystery
                             awards to the player that crossed the threshold, so should award ASAP. -->
                        <xs:element name="PriorityAward" type="xs:boolean"/>

                        <!-- Optional (used by palcomx adapter), instead of device ID. -->
                        <xs:element name="WinningAssetNumber" type="xs:string"/>

                        <!-- Optional (used by poker frenzy). -->
                        <xs:element name="WinningHand" type="xs:string"/>

                        <!-- Optional (used by for wide area). -->
                        <xs:element name="Remote" type="xs:boolean"/>

                        <!-- Method of Payment One Link would like the device to use in paying out the jackpot -->
                        <xs:element name="MethodOfPayment" type="v1_0:MethodOfPayment"/>

                        <!-- AwardType One Link would like the device to use in paying out the jackpot -->
                        <xs:element name="AwardType" type="v1_0:AwardType"/>

                        <!-- Optional session id, if award must be targeted to this particular session (null if doesn't matter). -->
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>

                        <!-- If this award is for a particular patron, the patron information associated with it. -->
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>

                        <!-- Optional (used for Prize Jackpots) -->
                        <xs:element name="PrizeDescription" type="xs:string" minOccurs="0"/>

                        <!-- Optional (used for G2S Jackpots) -->
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0"/>

                        <!-- Optional (used by nCompass for content mapping) -->
                        <xs:element name="MinorAwardId" type="xs:long" minOccurs="0"/>
                        <!-- Optional (used by Virtual Drawings for award mapping) -->
                        <xs:element name="ExternalAwardId" type="xs:string" minOccurs="0"/>
                        <xs:element name="ExternalAwardValue" type="xs:string" minOccurs="0"/>

                        <!-- Optional (used by Virtual Drawings, If VD receive JackpotHit message after ExpirationTime then It will not send JackpotPaid message) -->
                        <xs:element name="ExpirationTime" type="xs:long" minOccurs="0"/>
                        <xs:element name="JackpotTriggerEventId" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="JackpotPaidStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Signaled"/>
            <xs:enumeration value="Pending"/>
            <xs:enumeration value="Ineligible"/>
            <xs:enumeration value="SessionMismatch"/>
            <xs:enumeration value="Paid"/>
            <xs:enumeration value="Failed"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Sent by device to confirm that the jackpot payout request was confirmed by the EGM.  The award
         may not have been paid out as yet, if a slot operator must arrive to do a handpay.  -->
    <xs:element name="JackpotPaid">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- One link level id -->
                        <xs:element ref="v1_0:LevelId"/>

                        <!-- The JPC-assigned identifier for this jackpot. -->
                        <xs:element name="JackpotId" type="xs:long"/>

                        <!-- The JPC-assigned identifier for this jackpot at the local site. -->
                        <xs:element name="RemoteJackpotId" type="xs:long"/>

                        <!-- Whether the jackpot has been signalled to the EGM, is now pending a handpay, or is cleared
                              (no handpay pending or handpay reset). -->
                        <xs:element name="Status" type="v1_0:JackpotPaidStatus"/>

                        <!-- The amount awarded. -->
                        <xs:element name="Amount" type="v1_0:Currency"/>

                        <!-- Optional (used to indicate reason for ineligibility or failure to pay jackpot -->
                        <xs:element name="StatusInfo" type="xs:string" minOccurs="0" maxOccurs="1"/>

                        <!-- Optional (used by palcomx adapter) -->
                        <xs:element name="WinningAssetNumber" type="xs:string"/>
                        <xs:element name="WinningVenue" type="xs:string"/>
                        <xs:element name="WinningBank" type="xs:string"/>
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0"/>
                        <xs:element name="WinningLocation" type="xs:string"/>
                        <xs:element name="MinorAwardId" type="xs:long" minOccurs="0"/>
                        <xs:element name="AwardType" type="v1_0:AwardType" minOccurs="0"/>
                        <xs:element name="MethodOfPayment" type="v1_0:MethodOfPayment" minOccurs="0"/>
                        <!-- The type of trigger that fired this jackpot. -->
                        <xs:element name="JackpotTriggerType" type="v1_0:JackpotTriggerType" minOccurs="0"/>
                        <xs:element name="PaytableItemAwarded" type="v1_0:PromoGamePaytableItem" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
        For levels configured to award Claimables, the following message will be sent in lieu of a JackpotHit.

        No JackpotHit/JackpotPaid sequence is used for these types of awards.

        The device receiving this message should prompt the player that they have won an award which must
        be claimed, and use the given URL to post a JSON response indicator the player's acceptance of said award.

        The JSON string looks like:


    -->
    <xs:element name="ClaimableAward">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The amount you could win if carded. -->
                        <xs:element name="Amount" type="v1_0:Currency"/>

                        <!-- Optional session id, if award must be targeted to this particular session (null if doesn't matter). -->
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>

                        <!-- The expiration time in utc milliseconds -->
                        <xs:element name="ClaimableExpirationMillis" type="xs:long" minOccurs="0"/>

                        <!-- The HTTP/REST URL to post accept/decline json response. -->
                        <xs:element name="ClaimableAcceptanceUrl" type="xs:string" minOccurs="0"/>

                        <!-- Whether the award was posted to the same phone/pin (ie they player does not need to re-enter a phone/pin. -->
                        <xs:element name="ClaimableSamePlayer" type="xs:boolean" minOccurs="0"/>

                        <!-- The Id of the Level this Claimable belongs to -->
                        <xs:element name="LevelId" type="xs:long"/>

                        <!-- The Id of the Minor Award that triggered this Claimable -->
                        <xs:element name="MinorAwardId" type="xs:long" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Onelink method to denote winner has been paid therefore, clear the winner  -->
    <xs:element name="WinnerPaid">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- One link level id -->
                        <xs:element ref="v1_0:LevelId"/>

                        <!-- The level name, for debugging or user notification. -->
                        <xs:element name="LevelName" type="xs:string"/>

                        <!-- The JPC-assigned identifier for this jackpot. -->
                        <xs:element name="JackpotId" type="xs:long"/>

                        <!-- Whether the jackpot has been signalled to the EGM, is now pending a handpay, or is cleared
                              (no handpay pending or handpay reset). -->
                        <xs:element name="Status" type="v1_0:JackpotPaidStatus"/>

                        <!-- The amount awarded. -->
                        <xs:element name="Amount" type="v1_0:Currency"/>
                        <xs:element name="WinningAssetNumber" type="xs:string" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="WinnerPick">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element ref="v1_0:LevelId"/>

                        <!-- The level name, for debugging or user notification. -->
                        <xs:element name="LevelName" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="WinnerPicked">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>

                        <xs:element ref="v1_0:LevelId"/>

                        <!-- The level name, for debugging or user notification. -->
                        <xs:element name="LevelName" type="xs:string"/>

                        <xs:element name="MediaMinSeconds" type="xs:int"/>
                        <xs:element name="MediaMaxSeconds" type="xs:int"/>

                        <xs:element name="WinnerDeviceId" type="v1_0:DeviceId"/>
                        <xs:element name="WinAmount" type="v1_0:Currency"/>
                        <xs:element name="JackpotId" type="xs:long"/>
                        <xs:element name="WinnerVenue" type="xs:string"/>
                        <xs:element name="WinnerBank" type="xs:string"/>
                        <xs:element name="WinnerLocation" type="xs:string"/>
                        <xs:element name="WinnerAssetNumber" type="xs:string"/>

                        <!-- The type of trigger that fired this jackpot. -->
                        <xs:element name="JackpotTriggerType" type="v1_0:JackpotTriggerType"/>

                        <!-- Winning Hand in a proker frenzy trigger -->
                        <xs:element name="WinningHand" type="xs:string"/>

                        <!-- If the award is for a particular patron, the patron information associated with it. -->
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>

                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>

                        <xs:element name="Pte" type="xs:boolean"/>
                        <xs:element name="MethodOfPayment" type="v1_0:MethodOfPayment" minOccurs="0"/>
                        <xs:element name="AwardType" type="v1_0:AwardType" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0"/>
                        <xs:element name="MinorAwardId" type="xs:long" minOccurs="0"/>
                        <xs:element name="ExternalAwardName" type="xs:string" minOccurs="0"/>
                        <xs:element name="ExternalAwardValue" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="PromoGamePaytable">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Items" type="v1_0:PromoGamePaytableItem" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PromoGamePaytableItem">
        <xs:sequence>
            <xs:element name="Type" type="xs:string"/>
            <xs:element name="Value" type="xs:long"/>
            <xs:element name="Probability" type="v1_0:Currency"/>
            <xs:element name="ProgressiveName" type="xs:string"/>
            <xs:element name="ExternalAwardName" type="xs:string" minOccurs="0"/>
            <xs:element name="ExternalAwardId" type="xs:string" minOccurs="0"/>
            <xs:element name="Tag" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="PromoGameRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="JackpotId" type="xs:long"/>
                        <xs:element name="LevelId" type="xs:long"/>
                        <xs:element name="MinorAwardId" type="xs:long" minOccurs="0"/>
                        <xs:element name="Amount" type="v1_0:Currency"/>
                        <xs:element name="PaytableItemType" type="xs:string"/>
                        <xs:element name="PaytableItemValue" type="xs:long"/>
                        <xs:element name="ExternalAwardName" type="xs:string" minOccurs="0"/>
                        <xs:element name="ExternalAwardId" type="xs:string" minOccurs="0"/>
                        <xs:element name="PromoGamePaytable" type="v1_0:PromoGamePaytable"/>
                        <!-- A tag that can be associated with a graphical result in the SWF -->
                        <xs:element name="PaytableItemTag" type="xs:int"/>
                        <!-- The type of trigger that fired this promo game jackpot. -->
                        <xs:element name="JackpotTriggerType" type="v1_0:JackpotTriggerType"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PromoGameAcceptanceStatus">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element minOccurs="1" maxOccurs="1" name="Accepted" type="v1_0:PromoGameStatus"/>
                        <xs:element name="JackpotId" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="ClassType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Class_II"/>
            <xs:enumeration value="Class_III"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="PromoGameStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Accepted"/>
            <xs:enumeration value="Declined"/>
            <xs:enumeration value="Failed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TicketLocationInformation">
        <xs:restriction base="xs:string">
            <xs:maxLength value="40"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TicketTitleInformation">
        <xs:restriction base="xs:string">
            <xs:maxLength value="16"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="CreditsType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Cashable"/>
            <xs:enumeration value="RestrictedPromotional"/>
            <xs:enumeration value="NonRestrictedPromotional"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="DaysTilExpires">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="9999"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="TicketExpiration">
        <xs:sequence>
            <xs:element name="CreditsType" type="v1_0:CreditsType"/>
            <xs:element name="ExpirationPeriod" type="v1_0:DaysTilExpires"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="ValidationSystemId">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="99"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ValidationNumber">
        <xs:restriction base="xs:long">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="9999999999999999"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ValidationMeter">
        <xs:sequence>
            <xs:element name="MeterId" type="xs:int"/>
            <xs:element name="TotalValidations" type="xs:int"/>
            <xs:element name="CumulativeValidationAmount" type="v1_0:Currency"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="SasEnhancedValidationType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CashableTicket"/>
            <xs:enumeration value="RestrictedPromotionalTicket"/>
            <xs:enumeration value="CashableTicketFromAFT"/>
            <xs:enumeration value="RestrictedTicketFromAFT"/>
            <xs:enumeration value="DebitTicketFromAFT"/>
            <xs:enumeration value="CancelledCreditHandpayWithReceipt"/>
            <xs:enumeration value="JackpotHandpayWithReceipt"/>
            <xs:enumeration value="CancelledCreditHandpayNoReceipt"/>
            <xs:enumeration value="JackpotHandpayNoReceipt"/>
            <xs:enumeration value="CashableTicketRedeemed"/>
            <xs:enumeration value="RestrictedPromotionalTicketRedeemed"/>
            <xs:enumeration value="NonRestrictedPromotionalTicketRedeemed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TicketValidationErrorCode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="RejectedByValidationSystem"/>
            <xs:enumeration value="EGMCommFailure"/>
            <xs:enumeration value="EGMUnsupportedProtocol"/>
            <xs:enumeration value="SASResponseEGMNotInCashOut"/>
            <xs:enumeration value="SASResponseImproperValidation"/>
            <xs:enumeration value="PriorValidationPending"/>
            <xs:enumeration value="OtherNotDefined"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SystemValidationResponseCode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CashableTicket"/>
            <xs:enumeration value="RestrictedPromotionalTicket"/>
            <xs:enumeration value="NonRestrictedPromotionalTicket"/>
            <xs:enumeration value="UnableToValidate"/>
            <xs:enumeration value="InvalidValidationNumber"/>
            <xs:enumeration value="UnknownValidationNumber"/>
            <xs:enumeration value="TicketPendingInSystem"/>
            <xs:enumeration value="TicketAlreadyRedeemed"/>
            <xs:enumeration value="TicketExpired"/>
            <xs:enumeration value="ValidationInfoUnavailable"/>
            <xs:enumeration value="TicketAmountIncorrect"/>
            <xs:enumeration value="TicketAmountExceedsLimit"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="TicketValidationNumberRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TicketType" type="v1_0:CreditsType"/>
                        <xs:element name="TicketAmount" type="v1_0:Currency"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TicketValidationNumber">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="SystemID" type="v1_0:ValidationSystemId"/>
                        <xs:element name="ValidationNumber" type="v1_0:ValidationNumber"/>
                        <xs:element name="Expiration" type="v1_0:TicketExpiration" minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TicketPrinted">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="SystemID" type="v1_0:ValidationSystemId"/>
                        <xs:element name="ValidationNumber" type="v1_0:ValidationNumber"/>
                        <xs:element name="ValidationType" type="v1_0:SasEnhancedValidationType" minOccurs="0"/>
                        <xs:element name="ValidationDate" type="xs:dateTime" minOccurs="0"/>
                        <xs:element name="Amount" type="v1_0:Currency" minOccurs="0"/>
                        <xs:element name="TicketNumber" type="xs:int" minOccurs="0"/>
                        <xs:element name="Expiration" type="xs:dateTime" minOccurs="0"/>
                        <xs:element name="PoolId" type="xs:int" minOccurs="0"/>
                        <xs:element name="ValidationErrorCode" type="v1_0:TicketValidationErrorCode" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ValidateTicketRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="SystemID" type="v1_0:ValidationSystemId"/>
                        <xs:element name="ValidationNumber" type="v1_0:ValidationNumber"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TicketValidation">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Validated" type="xs:boolean"/>
                        <xs:element name="TransferCode" type="v1_0:SystemValidationResponseCode"/>
                        <xs:element name="Amount" type="v1_0:Currency"/>
                        <xs:element name="SystemID" type="v1_0:ValidationSystemId"/>
                        <xs:element name="ValidationNumber" type="v1_0:ValidationNumber"/>
                        <xs:element name="RestrictedExpiration" type="xs:date" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="PoolId" type="xs:int" minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TicketRedeemed">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="MachineStatus" type="xs:int"/>
                        <xs:element name="SystemID" type="v1_0:ValidationSystemId"/>
                        <xs:element name="ValidationNumber" type="v1_0:ValidationNumber"/>
                        <xs:element name="Amount" type="v1_0:Currency"/>
                        <xs:element name="TicketType" type="v1_0:CreditsType" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ValidationMetersRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MeterId" type="xs:int" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ValidationMeters">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Meter" type="v1_0:ValidationMeter" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="SetTicketData">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Location" type="v1_0:TicketLocationInformation" minOccurs="0"/>
                        <xs:element name="Address1" type="v1_0:TicketLocationInformation" minOccurs="0"/>
                        <xs:element name="Address2" type="v1_0:TicketLocationInformation" minOccurs="0"/>
                        <xs:element name="RestrictedTicketTitle" type="v1_0:TicketTitleInformation" minOccurs="0"/>
                        <xs:element name="DebitTitleInformation" type="v1_0:TicketTitleInformation" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="SetTicketDataAcknowledgement">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="SetTicketDataRequestID" type="v1_0:MessageId"/>
                        <xs:element name="Success" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MachineLocation">
        <xs:sequence>
            <xs:element name="AssetNumber" type="xs:string"/>
            <xs:element name="MacAddress" type="xs:string"/>
            <xs:element name="Bank" type="xs:string"/>
            <xs:element name="Section" type="xs:string"/>
            <xs:element name="Location" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="MachineLocationUpdate">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- the list of machine locations -->
                        <xs:element name="Updates" type="v1_0:MachineLocation" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="CriteriaTimeUnit">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DAY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="SlotPatronTier">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Description" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PatronMetric">
        <xs:sequence>
            <xs:element name="Tier" type="v1_0:SlotPatronTier"/>
            <xs:element name="Criteria" type="v1_0:MetricCriteria"/>
            <xs:element name="QualifyingValue" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MachineGroup">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Description" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="MetricValueUnit">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CoinIn"/>
            <xs:enumeration value="CardIn"/>
            <xs:enumeration value="TheoWin"/>
            <xs:enumeration value="BasePointsEarned"/>
            <xs:enumeration value="TierOnly"/>
            <xs:enumeration value="Gender"/>
            <xs:enumeration value="Age"/>
            <xs:enumeration value="EnrolledDate"/>
            <xs:enumeration value="ActualWin"/>
            <xs:enumeration value="TimePlayedSeconds"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="LevelStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Configuration"/>
            <xs:enumeration value="Retired"/>
            <xs:enumeration value="ConfigSnapshot"/>
            <xs:enumeration value="JackpotSnapshot"/>
            <xs:enumeration value="PeriodicSnapshot"/>
            <xs:enumeration value="EODSnapshot"/>
            <xs:enumeration value="Retiring"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TimeBasedType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Progressive"/>
            <xs:enumeration value="Fixed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="MetricCriteria">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Info" type="xs:string"/>
            <xs:element name="UseAverage" type="xs:boolean"/>
            <xs:element name="UseCurrent" type="xs:boolean"/>
            <xs:element name="UncardedOnly" type="xs:boolean"/>
            <xs:element name="RollupTimeUnit" type="v1_0:CriteriaTimeUnit"/>
            <xs:element name="StartTime" type="xs:date"/>
            <xs:element name="EndTime" type="xs:date"/>
            <xs:element name="TimeUnit" type="v1_0:CriteriaTimeUnit"/>
            <xs:element name="ExcludeInactivePeriodsForAverage" type="xs:boolean"/>
            <xs:element name="UseLastN" type="xs:long"/>
            <xs:element name="UnitType" type="v1_0:MetricValueUnit"/>
            <xs:element name="QualifyingTiers" type="v1_0:SlotPatronTier" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="UsePercent" type="xs:boolean"/>
            <xs:element name="IncludeCurrentGamingDay" type="xs:boolean"/>
            <xs:element name="Active" type="xs:boolean"/>
            <xs:element name="RemoteCriteriaId" type="xs:long"/>
            <xs:element name="MaxAgeInYears" type="xs:int"/>
            <xs:element name="MinAgeInYears" type="xs:int"/>
            <xs:element name="QualifyingGender" type="xs:string" minOccurs="0"/>
            <xs:element name="DaysFromEnrollmentDate" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CriteriaTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TimeBasedTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
                <xs:sequence>
                    <xs:element name="FixedAwardValue" type="v1_0:Currency"/>
                    <xs:element name="StartTime" type="xs:date"/>
                    <xs:element name="EndTime" type="xs:date"/>
                    <xs:element name="NumOfAwards" type="xs:int"/>
                    <xs:element name="MinDays" type="xs:int"/>
                    <xs:element name="AvgDays" type="xs:int"/>
                    <xs:element name="MaxDays" type="xs:int"/>
                    <xs:element name="TimeBasedType" type="v1_0:TimeBasedType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ScatterTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
                <xs:sequence>
                    <xs:element name="MinAmount" type="v1_0:Currency"/>
                    <xs:element name="AvgAmount" type="v1_0:Currency"/>
                    <xs:element name="MaxAmount" type="v1_0:Currency"/>
                    <xs:element name="NumberOfAwards" type="xs:int"/>
                    <xs:element name="NumberOfHours" type="xs:int"/>
                    <xs:element name="PromoGamePaytable" type="v1_0:PromoGamePaytable"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PlayXGetYTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="JackpotOnDemandTrigger">
        <xs:complexContent>
            <xs:extension base="v1_0:JackpotTrigger">
                <xs:sequence>
                    <xs:element name="MinAmount" type="v1_0:Currency"/>
                    <xs:element name="AvgAmount" type="v1_0:Currency"/>
                    <xs:element name="MaxAmount" type="v1_0:Currency"/>
                    <xs:element name="NumberOfAwards" type="xs:int"/>
                    <xs:element name="NumberOfHours" type="xs:int"/>
                    <xs:element name="SpecifyAwardSchedule" type="xs:boolean"/>
                    <xs:element name="PromoGamePaytable" type="v1_0:PromoGamePaytable" minOccurs="0"/>
                    <xs:element name="PlayerWinLimit" type="xs:int"/>
                    <xs:element name="PlayerWinLimitType" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--
     ======================================= MEDIA =========================================
    -->
    <xs:element name="TechnicianAuthorizationRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfigurationRequest">
                    <xs:sequence>
                        <xs:element name="TechnicianPassword" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TechnicianAuthorization">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfigurationRequest">
                    <xs:sequence>
                        <xs:element name="AuthorizationStatus" type="v1_0:PinValidationStatus"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="MediaConfigurationRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfigurationRequest">
                    <xs:sequence>
                        <xs:element name="MediaType" type="v1_0:MediaType"/>
                        <xs:element name="ContentCacheSizeMB" type="xs:int"/>
                        <xs:element name="Resolution" type="v1_0:Resolution"/>
                        <xs:element name="Components" type="v1_0:File" maxOccurs="unbounded"/>
                        <xs:element name="AssetNumber" type="xs:string"/>
                        <xs:element name="ClassType" type="v1_0:ClassType"/>
                        <xs:element name="TechnicianAuthorization" type="xs:boolean"/>
                        <xs:element name="TechnicianPassword" type="xs:string"/>
                        <xs:element name="Volume" type="xs:long"/>
                        <xs:element name="Audio" type="v1_0:AudioType"/>
                        <xs:element name="SupportedResolutions" type="v1_0:Resolution" maxOccurs="unbounded"/>
                        <xs:element name="NativeResolution" type="v1_0:Resolution"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="MediaType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Avl"/>
            <xs:enumeration value="Tavl"/>
            <xs:enumeration value="uAvl"/>
            <xs:enumeration value="Osk"/>
            <xs:enumeration value="MachineMeter"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="FileDownloadType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Component"/>
            <xs:enumeration value="Media"/>
            <xs:enumeration value="TransitionImage"/>
            <xs:enumeration value="DefaultMovie"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="AudioType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Analog"/>
            <xs:enumeration value="HDMI"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Resolution">
        <xs:sequence>
            <xs:element name="Width" type="xs:int"/>
            <xs:element name="Height" type="xs:int"/>
            <xs:element name="Rotation" type="xs:int"/>
            <xs:element name="RefreshRate" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="MediaConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfiguration">
                    <xs:sequence>
                        <xs:element name="GameDeviceIds" type="xs:long" maxOccurs="unbounded"/>
                        <xs:element name="DefaultMovie" type="v1_0:File"/>
                        <xs:element name="TransitionImage" type="v1_0:File"/>
                        <xs:element name="Levels" type="v1_0:MediaLevel" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="Streams" type="v1_0:VideoStream" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="Playlists" type="v1_0:Playlist" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="Components" type="v1_0:File" maxOccurs="unbounded"/>
                        <xs:element name="ConventionEvents" type="v1_0:ConventionEvent" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="ConventionRoomDirections" type="v1_0:ConventionRoomDirection" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="Rooms" type="v1_0:Room" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="MultiDisplaySyncLatency" type="xs:long"/>
                        <xs:element name="MultiDisplaySyncThreshold" type="xs:long"/>
                        <xs:element name="MultiDisplayMaster" type="xs:boolean"/>
                        <xs:element name="WinnerEventDropCleared" type="xs:boolean"/>
                        <xs:element name="WinnerEventPrioritization" type="xs:boolean"/>
                        <xs:element name="LoopEventPrograms" type="xs:boolean"/>
                        <xs:element name="ClassType" type="v1_0:ClassType"/>
                        <xs:element name="DrinkList" type="v1_0:Drink" minOccurs="1" maxOccurs="unbounded"/>
                        <xs:element name="ContentHttpUrl" type="xs:string" minOccurs="0"/>
                        <xs:element name="SlotsContentHttpUrl" type="xs:string" minOccurs="0"/>
                        <xs:element name="MediaType" type="v1_0:MediaType"/>
                        <xs:element name="Profile" type="v1_0:Profile" minOccurs="0"/>
                        <xs:element name="Channels" type="v1_0:MediaChannelDefinition" minOccurs="1"
                                    maxOccurs="unbounded"/>
                        <xs:element name="MicroChannels" type="v1_0:MicroChannelDefinition" minOccurs="1"
                                    maxOccurs="unbounded"/>
                        <xs:element name="DefaultChannel" type="xs:string"/>
                        <xs:element name="CurrentChannel" type="xs:string"/>
                        <xs:element name="LastPlayedChannel" type="xs:string"/>
                        <xs:element name="MediaEventId" type="xs:long"/>
                        <xs:element name="Volume" type="xs:long"/>
                        <xs:element name="Rotate" type="xs:string"/>
                        <xs:element name="Resolution" type="v1_0:Resolution"/>
                        <xs:element name="Audio" type="v1_0:AudioType"/>
                        <xs:element name="SupportedResolutions" type="v1_0:Resolution" maxOccurs="unbounded"/>
                        <xs:element name="Modeline" type="xs:string" minOccurs="0"/>
                        <xs:element name="Achievements" type="v1_0:File" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="CompFiles" type="v1_0:File" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="PeriodicRestartSchedule" type="xs:string"/>
                        <!-- crontab-like entry for restarting flash or rebooting -->
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Room">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="abbreviation" type="xs:string"/>
            <xs:element name="sectionName" type="xs:string"/>
            <xs:element name="venueName" type="xs:string"/>
            <xs:element name="defaultRoom" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ConventionEvent">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="type" type="xs:string"/>
            <xs:element name="groupName" type="xs:string"/>
            <xs:element name="startTime" type="xs:dateTime"/>
            <xs:element name="endTime" type="xs:dateTime"/>
            <xs:element name="leadTimeMinutes" type="xs:int"/>
            <xs:element name="rooms" type="v1_0:Room" maxOccurs="unbounded"/>
            <xs:element name="roomsDescription" type="xs:string"/>
            <xs:element name="logo" type="v1_0:File"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ConventionRoomDirection">
        <xs:sequence>
            <xs:element name="roomName" type="xs:string"/>
            <xs:element name="roomAbbreviation" type="xs:string"/>
            <xs:element name="directionName" type="xs:string"/>
            <xs:element name="directionDescription" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExternalConventionEvent">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="type" type="xs:string"/>
            <xs:element name="groupName" type="xs:string"/>
            <xs:element name="startTime" type="xs:dateTime"/>
            <xs:element name="endTime" type="xs:dateTime"/>
            <xs:element name="roomName" type="xs:string"/>
            <xs:element name="roomCode" type="xs:string"/>
            <xs:element name="eventId" type="xs:string"/>
            <xs:element name="logo" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MediaLevel">
        <xs:sequence>
            <xs:element name="LevelSequence" type="xs:long"/>
            <xs:element name="LevelId" type="xs:long"/>
            <xs:element name="LevelChannel" type="v1_0:MessageChannel"/>
            <xs:element name="Payable" type="v1_0:Payable"/>
            <xs:element name="AnticipationContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="CelebrationContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="OdometerContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="PromoGameContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="LevelUnlockedContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="EndingSoonContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="LeaderboardContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="FinalResultsContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="PokerMinorPromoGameContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="PokerMinorCelebrationContent" type="v1_0:SlotsContentPackage" minOccurs="0"/>
            <xs:element name="MinorAwards" type="v1_0:MinorAward" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Level summary information, as needed by devices to participate in a level. -->
    <xs:complexType name="Profile">
        <xs:sequence>
            <xs:element name="Width" type="xs:long"/>
            <xs:element name="Height" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <!-- AFT Player Tracking to AVL Messaging -->
    <xs:simpleType name="AvlTransferRequestCodeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TransferToMachine"/>
            <xs:enumeration value="TransferFromMachine"/>
            <xs:enumeration value="TransferToAccount"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="IdCard">
        <xs:sequence>
            <xs:element name="track1" type="xs:string"/>
            <xs:element name="track2" type="xs:string"/>
            <xs:element name="track3" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="AvlTransferRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="RequestCode" type="v1_0:AvlTransferRequestCodeType"/>
                        <xs:element name="PinNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="Card" type="v1_0:IdCard"/>
                        <xs:element name="CashableTransferAmount" type="v1_0:Currency"/>
                        <xs:element name="NonCashableTransferAmount" type="v1_0:Currency"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="AvlTransferResponseCodeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Success"/>
            <xs:enumeration value="Failed"/>
            <xs:enumeration value="InvalidPin"/>
            <xs:enumeration value="Locked"/>
            <xs:enumeration value="InsufficientFunds"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="AvlTransferResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="ResponseCode" type="v1_0:AvlTransferResponseCodeType"/>
                        <xs:element name="CashableBalance" type="v1_0:Currency"/>
                        <xs:element name="NonCashableBalance" type="v1_0:Currency"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
         #################################################################
         ################             OTHER               ################
         #################################################################
    -->

    <xs:simpleType name="DeviceUpdateType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Configuration"/>
            <xs:enumeration value="FileDownload"/>
            <xs:enumeration value="FileInstall"/>
            <xs:enumeration value="Deactivate"/>
            <xs:enumeration value="AdjustLevel"/>
            <xs:enumeration value="RetireLevel"/>
            <xs:enumeration value="IntegrityCheck"/>
            <xs:enumeration value="ConventionEvents"/>
            <xs:enumeration value="Reboot"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="Patron">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Example: Mr. Stephen T. Colbert Jr., D.F.A. -->
                        <!-- Title:         Mr.     -->
                        <!-- FirstName:     Stephen -->
                        <!-- MiddleName:    T.      -->
                        <!-- LastName:      Colbert -->
                        <!-- Generation:    Jr.     -->
                        <!-- Suffix:        D.F.A.  -->

                        <xs:element name="FirstName" type="xs:string"/>
                        <xs:element name="MiddleName" type="xs:string"/>
                        <xs:element name="LastName" type="xs:string"/>
                        <xs:element name="Title" type="xs:string"/>
                        <xs:element name="Suffix" type="xs:string"/>
                        <xs:element name="Generation" type="xs:string"/>
                        <xs:element name="PinNumber" type="xs:string"/>

                        <xs:element name="Cards" type="v1_0:IdCard" maxOccurs="unbounded"/>
                        <xs:element name="Balances" type="v1_0:PatronBalance" maxOccurs="unbounded"/>
                        <xs:element name="Transactions" type="v1_0:Transaction" maxOccurs="unbounded"/>
                        <xs:element name="Tier" type="v1_0:PatronTier"/>

                        <!--                    <xs:element name="PointsTotal" type="xs:int"/>                          -->
                        <!--                    <xs:element name="PointsSession" type="xs:int"/>                        -->
                        <!--                    <xs:element name="FreePlay" type="v1_0:Currency"/>                      -->
                        <!--                    <xs:element name="CoinInSession" type="v1_0:Currency"/>                 -->
                        <!--                    <xs:element name="CoinInLTD" type="v1_0:Currency"/>                     -->
                        <!--                    <xs:element name="RandomRewardsSession" type="v1_0:Currency"/>          -->
                        <!--                    <xs:element name="RandomRewardsLT" type="v1_0:Currency"/>               -->
                        <!--                    <xs:element name="CurrentTierValue" type="xs:int"/>                     -->
                        <!--                    <xs:element name="MaxTierValue" type="xs:int"/>                         -->
                        <!--                    <xs:element name="SessionTime" type="xs:long"/>                         -->
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="BalanceType">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Description" type="v1_0:Description"/>
            <xs:element name="IncludedTotals" type="v1_0:TotalType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TotalType">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Code" type="xs:string"/>
            <xs:element name="Description" type="v1_0:Description"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Transaction">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Amount" type="xs:long"/>
            <xs:element name="Comment" type="xs:string"/>
            <xs:element name="Type" type="v1_0:TotalType"/>
            <xs:element name="postedDateTime" type="xs:dateTime"/>
            <xs:element name="originalSystemDateTime" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PatronBalance">
        <xs:sequence>
            <xs:element name="BalanceType" type="v1_0:BalanceType"/>
            <xs:element name="Amount" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="SessionAbandoned">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                        <xs:element name="SessionTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
        Heart beat message to smib on eligibility of current session.
    -->
    <xs:element name="BonusingAvailable">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- The session id sent from the most recent ICardStatus, used to detect stale/incorrect messages -->
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>

                        <!-- Optional carded session information associated with the session. -->
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>

                        <!-- False if there were any errors calling remote systems to determine full eligibility. -->
                        <xs:element name="EligibilityDetermined" type="xs:boolean"/>

                        <!-- Zero or more levels (and minor awards within each) to which the session is eligible -->
                        <xs:element name="EligibleLevels" type="v1_0:EligibleLevel" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="EligibleLevel">
        <xs:sequence>
            <xs:element ref="v1_0:LevelId"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Info" type="xs:string"/>
            <xs:element name="TriggerType" type="xs:string"/>
            <xs:element name="ShowOdometer" type="xs:boolean"/>
            <xs:element name="Value" type="v1_0:Currency"/>
            <xs:element name="LinkName" type="xs:string" minOccurs="0"/>
            <xs:element name="LinkSequence" type="xs:int" minOccurs="0"/>
            <xs:element name="Eligible" type="xs:boolean"/>
            <xs:element name="ParticipatingMachine" type="xs:boolean"/>
            <xs:element name="PercentEligible" type="v1_0:Percentage"/>
            <xs:element name="StartTimeUtc" type="xs:long" minOccurs="0"/>
            <xs:element name="EndTimeUtc" type="xs:long" minOccurs="0"/>
            <xs:element name="TotalAwardsToPlayer" type="v1_0:Currency"/>
            <xs:element name="Minors" type="v1_0:EligibleMinor" maxOccurs="unbounded"/>
            <xs:element name="Pte" type="xs:boolean"/>
            <xs:element name="ShowInfo" type="xs:boolean"/>
            <xs:element name="LeaderboardUrl" type="xs:string" minOccurs="0"/>
            <xs:element name="Status" type="v1_0:PteStatus"/>
            <xs:element name="PlayerRank" type="xs:int" minOccurs="0"/>
            <xs:element name="TriggerMedia" type="xs:boolean" minOccurs="0"/>
            <xs:element name="PlayerQualified" type="xs:boolean" minOccurs="0"/>
            <xs:element name="TotalRTP" type="xs:decimal" minOccurs="0"/>
            <xs:element name="ValidForRTPCheck" type="xs:boolean" minOccurs="0"/>
            <xs:element name="AwardType" type="v1_0:AwardType"/>
            <xs:element name="PrizeDescription" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="PteStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Inactive"/>
            <xs:enumeration value="StartCountdown"/>
            <xs:enumeration value="Active"/>
            <xs:enumeration value="EndCountdown"/>
            <xs:enumeration value="Results"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="EligibleMinor">
        <xs:sequence>
            <xs:element name="Sequence" type="xs:int"/>
            <xs:element name="Eligible" type="xs:boolean"/>
            <xs:element name="PercentEligible" type="v1_0:Percentage"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Min" type="v1_0:Currency"/>
            <xs:element name="Max" type="v1_0:Currency"/>
            <xs:element name="AwardType" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PatronAccount">
        <xs:sequence>
            <xs:element name="PatronCard" type="v1_0:IdCard"/>
            <xs:element name="PatronName" type="xs:string"/>
            <xs:element name="PatronCardNumber" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TwitterAccount">
        <xs:sequence>
            <xs:element name="ConsumerKey" type="xs:string"/>
            <xs:element name="ConsumerSecret" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PatronSessionInfo">
        <xs:sequence>
            <xs:element name="CardNumber" type="xs:string" minOccurs="0"/>
            <xs:element name="PlayerId" type="xs:long" minOccurs="0"/>
            <xs:element name="SessionPts" type="xs:int" minOccurs="0"/>
            <xs:element name="Tier" type="xs:string" minOccurs="0"/>
            <xs:element name="Name" type="xs:string" minOccurs="0"/>
            <xs:element name="FirstName" type="xs:string" minOccurs="0"/>
            <xs:element name="LastName" type="xs:string" minOccurs="0"/>
            <xs:element name="AccountFrozen" type="xs:boolean" minOccurs="0"/> <!-- account, bad checksum -->
            <xs:element name="AccountLocked" type="xs:boolean" minOccurs="0"/> <!-- bad pin, can't pin -->
            <xs:element name="PointBalance" type="v1_0:AccountBalance" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="PointsEarnedToday" type="xs:long" minOccurs="0"/>
            <xs:element name="PointsToNextTier" type="xs:long" minOccurs="0"/>
            <xs:element name="Birthdate" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="Anniversary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="PlayerClubAnniversary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="PinSet" type="xs:boolean" minOccurs="0"/>
            <xs:element name="BadPinCount" type="xs:int" minOccurs="0"/>
            <xs:element name="PointsSessionTotal" type="xs:int" minOccurs="0"/>
            <xs:element name="RewardsCount" type="xs:int" minOccurs="0"/>
            <xs:element name="DrawingEntries" type="v1_0:PatronDrawingEntry" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Dap" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="AccountBalance">
        <xs:sequence>
            <xs:element name="accountName" type="xs:string" minOccurs="0"/>
            <xs:element name="primaryAccount" type="xs:boolean" minOccurs="0"/>
            <xs:element name="Balance" type="xs:long" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PatronGroup">
        <xs:sequence>
            <xs:element name="GroupId" type="xs:string"/>
            <xs:element name="GroupName" type="xs:string"/>
            <xs:element name="Active" type="xs:boolean"/>
            <xs:element name="StartDateTimeUtc" type="xs:long" minOccurs="0"/>
            <xs:element name="EndDateTimeUtc" type="xs:long" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="PointCalcFormulaRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="StatType" type="xs:string"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PointCalcFormulaResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PointsEarned" type="xs:int"/>
                        <xs:element name="PenniesNeededToEarnPoint" type="xs:long"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="StatType" type="xs:string"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PlayerStatisticRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="StartDate" type="xs:string"/>
                        <xs:element name="EndDate" type="xs:string"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PlayerStatisticResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="TimePlayedSeconds" type="xs:decimal"/>
                        <xs:element name="CashIn" type="xs:decimal"/>
                        <xs:element name="MoneyPlay" type="xs:decimal"/>
                        <xs:element name="CashOut" type="xs:decimal"/>
                        <xs:element name="Jackpot" type="xs:decimal"/>
                        <xs:element name="TheoWin" type="xs:decimal"/>
                        <xs:element name="FrontIn" type="xs:decimal"/>
                        <xs:element name="ChipsIn" type="xs:decimal"/>
                        <xs:element name="CreditIn" type="xs:decimal"/>
                        <xs:element name="AverageBet" type="xs:decimal"/>
                        <xs:element name="PointsEarned" type="xs:decimal"/>
                        <xs:element name="DollarsEarned" type="xs:decimal"/>
                        <xs:element name="CompEarned" type="xs:decimal"/>
                        <xs:element name="TotalGamingDays" type="xs:int"/>
                        <xs:element name="DaysPlayed" type="xs:int"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Patron lookup request to OneLink.PlayerTracking -->
    <xs:element name="PatronSessionInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="SessionDeviceId" type="xs:long"/>
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>
                        <xs:element name="ExpirationTimeUtc" type="xs:long"/>
                        <xs:element name="CardNumber" type="xs:string"/>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="IncludeGroups" type="xs:boolean"/>
                        <xs:element name="IncludePointAccounts" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludePinInfo" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeExternalAccounts" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeStatistics" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeRewards" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="IncludeStopPlayerInfo" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Patron lookup response from OneLink.PlayerTracking -->
    <xs:element name="PatronSessionInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="SessionDeviceId" type="xs:long"/>
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>
                        <xs:element name="CardNumber" type="xs:string" minOccurs="0"/>
                        <xs:element name="PlayerId" type="xs:long" minOccurs="0"/>
                        <xs:element name="Tier" type="xs:string" minOccurs="0"/>
                        <xs:element name="FirstName" type="xs:string" minOccurs="0"/>
                        <xs:element name="LastName" type="xs:string" minOccurs="0"/>
                        <xs:element name="Name" type="xs:string" minOccurs="0"/>
                        <xs:element name="GenderType" type="xs:string" minOccurs="0"/>
                        <xs:element name="AccountFrozen" type="xs:boolean" minOccurs="0"/> <!-- account, bad checksum -->
                        <xs:element name="AccountLocked" type="xs:boolean" minOccurs="0"/> <!-- bad pin, can't pin -->
                        <xs:element name="PointBalance" type="v1_0:AccountBalance" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="PointsToNextTier" type="xs:long" minOccurs="0"/>
                        <xs:element name="PointsEarnedToday" type="xs:long" minOccurs="0"/>
                        <xs:element name="Birthdate" type="xs:dateTime" minOccurs="0"/>
                        <xs:element name="Anniversary" type="xs:dateTime" minOccurs="0"/>
                        <xs:element name="RegisteredDateTime" type="xs:dateTime" minOccurs="0"/>
                        <xs:element name="Groups" type="v1_0:PatronGroup" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="PinSet" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="BadPinCount" type="xs:int" minOccurs="0"/>
                        <xs:element name="RewardsCount" type="xs:int" minOccurs="0"/>
                        <xs:element name="IncludePointAccounts" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludePinInfo" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeExternalAccounts" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeStatistics" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeRewards" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="Dap" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Patron Group lookup request to OneLink.PlayerTracking -->
    <xs:element name="GroupInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Patron Group lookup response from OneLink.PlayerTracking -->
    <xs:element name="GroupInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Groups" type="v1_0:PatronGroup" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PatronInformation">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PatronAccount" type="v1_0:PatronAccount"/>
                        <xs:element name="PointsTotal" type="xs:int"/>
                        <xs:element name="PointsSession" type="xs:int"/>
                        <xs:element name="FreePlay" type="v1_0:Currency"/>
                        <xs:element name="CoinInSession" type="v1_0:Currency"/>
                        <xs:element name="PatronTier" type="v1_0:PatronTier"/>
                        <xs:element name="CurrentTierValue" type="xs:int"/>
                        <xs:element name="MaxTierValue" type="xs:int"/>
                        <xs:element name="PointMultiplier" type="xs:decimal"/>
                        <xs:element name="PreferredLocale" type="v1_0:Locales" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="CashableBalance" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="NonCashableBalance" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="Promotions" type="v1_0:Promotion" maxOccurs="unbounded"/>
                        <xs:element name="EnabledFeatures" type="v1_0:PatronFeatures" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="CashlessParameters" type="v1_0:CashlessParameters" minOccurs="0"
                                    maxOccurs="1"/>
                        <xs:element name="SessionActive" type="xs:boolean"/>
                        <xs:element name="MessageToPatron" type="xs:string"/>
                        <xs:element name="TwitterAccount" type="v1_0:TwitterAccount" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="RGLimit" type="v1_0:Currency" minOccurs="0"/>
                        <xs:element name="PostalCode" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Promotion">
        <xs:sequence>
            <xs:element name="name" type="v1_0:Name"/>
            <xs:element name="description" type="v1_0:Description"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="Locales">
        <xs:restriction base="xs:string">
            <xs:enumeration value="jp_JP"/>
            <xs:enumeration value="th_TH"/>
            <xs:enumeration value="es_MX"/>
            <xs:enumeration value="en_US"/>
            <xs:enumeration value="en_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="PostPatronWin">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PatronAccount" type="v1_0:PatronAccount"/>
                        <xs:element name="Amount" type="v1_0:Currency"/>
                        <xs:element name="RequestedServices" type="v1_0:RequestedServices" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="RequestedServices">
        <xs:sequence>
            <!--
                        Twitter
                        coming soon (Facebook, FourSquare, etc....)
                    -->
            <xs:element name="Service" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="RGLossLimit">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PatronAccount" type="v1_0:PatronAccount"/>
                        <xs:element name="Message" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="FindMyFriendsRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PatronAccount" type="v1_0:PatronAccount"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Friend">
        <xs:sequence>
            <xs:element name="PatronName" type="xs:string"/>
            <xs:element name="Online" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="FindMyFriendsResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Patron Account of patron requesting friends -->
                        <xs:element name="PatronAccount" type="v1_0:PatronAccount"/>
                        <xs:element name="Friends" type="v1_0:Friend" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="PatronFeatures">
        <xs:sequence>
            <!--
                        FrenzyTierPercentage
                        CountdownPercentage
                        FreePlayRedemptionEnabled
                        PointsRedemptionEnabled
                        FrenzyTierGaugeEnabled
                        CountdownGaugeEnabled
                        TvEnabled
                        DrinksEnabled
                        DiningEnabled
                        PromotionsEnabled
                        OrderDrinksEnabled
                    -->
            <xs:element name="Key" type="xs:string"/>
            <xs:element name="Value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CashlessParameters">
        <xs:sequence>
            <xs:element name="CashlessPinRequired" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
            <xs:element name="CashlessAutoTransferAmount" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
            <xs:element name="CashlessMaxTransferAmount" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="EmployeeInformation">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                        <xs:element name="UserName" type="xs:string"/>
                        <xs:element name="AvailablePatronAccount" type="v1_0:PatronAccount" minOccurs="0"
                                    maxOccurs="1"/>
                        <xs:element name="FloatBalance" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="FloatRefill" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="MaxTransferAmount" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CashlessBalanceUpdate">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                        <xs:element name="CashableBalance" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="NonCashableBalance" type="v1_0:Currency" minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CardInsertedError">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                        <xs:element name="Message" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CardLookupError">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                        <xs:element name="Message" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CardRemoved">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="GetRedemptionDenominations">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                        <!--break out into a base class? -->
                        <xs:element name="Pin" type="xs:string"/>
                        <xs:element name="Type" type="v1_0:RedemptionType"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RedemptionDenominations">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PinStatus" type="v1_0:PinValidationStatus"/>
                        <!--break out into a base class? -->
                        <xs:element name="PinStatusMessage" type="xs:string"/>
                        <xs:element name="VoucherSets" type="v1_0:VoucherSet" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="Type" type="v1_0:RedemptionType"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="PinValidationStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Accepted"/>
            <xs:enumeration value="Incorrect"/>
            <xs:enumeration value="AccountLocked"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="VoucherSet">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
            <xs:element name="Amount" type="v1_0:Currency"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="RedemptionType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="FreePlay"/>
            <xs:enumeration value="Points"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="Redeem">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Status" type="v1_0:RedemptionStatus"/>
                        <xs:element name="TransactionId" type="xs:long"/>
                        <xs:element name="VoucherSetId" type="xs:long"/>
                        <xs:element name="CardNumber" type="v1_0:IdCard"/>
                        <xs:element name="Type" type="v1_0:RedemptionType"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RedemptionResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Status" type="v1_0:RedemptionStatus"/>
                        <xs:element name="StatusMessage" type="xs:string"/>
                        <xs:element name="TransactionId" type="xs:long"/>
                        <xs:element name="VoucherNumber" type="xs:string"/>
                        <xs:element name="ExpirationDate" type="xs:dateTime"/>
                        <xs:element name="PromotionName" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="RedemptionStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Request"/>
            <xs:enumeration value="Approved"/>
            <xs:enumeration value="Denied"/>
            <xs:enumeration value="Complete"/>
            <xs:enumeration value="Failed"/>
            <!-- need failure reason? -->
            <xs:enumeration value="PendingValid"/>
            <xs:enumeration value="Clear"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="TriggerChangeChannel">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ToChildSwfMessage">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Details" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="FromChildSwfMessage">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Details" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MediaTriggerEntry">
        <xs:sequence>
            <xs:element name="Key" type="xs:string"/>
            <xs:element name="Value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="MediaTrigger">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Name" type="xs:string"/>
                        <xs:element name="TriggerEntries" type="v1_0:MediaTriggerEntry" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="MediaTriggerRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MediaTrigger" type="v1_0:MediaTriggerElement"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="MediaCommand">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                        <xs:element name="Command" type="v1_0:MediaEventType"/>
                        <xs:element name="Args" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="UpdateMediaConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>

                        <!-- Type of request. -->
                        <xs:element name="RequestType" type="v1_0:MediaEventType"/>
                        <xs:element name="Requestor" type="xs:string"/>
                        <xs:element name="ChannelId" type="xs:long"/>
                        <!-- List of one or more device id's. -->
                        <xs:element name="Devices" type="v1_0:MediaUpdate" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MediaUpdate">
        <xs:sequence>
            <xs:element name="DeviceId" type="v1_0:DeviceId"/>
            <xs:element name="IPAddress" type="v1_0:IPAddress"/>
            <xs:element name="Content" type="v1_0:Content" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Content">
        <xs:complexContent>
            <xs:extension base="v1_0:File">
                <xs:sequence>
                    <xs:element name="Width" type="xs:int"/>
                    <xs:element name="Height" type="xs:int"/>
                    <xs:element name="FileSize" type="xs:int"/>
                    <xs:element name="Duration" type="xs:decimal"/>
                    <xs:element name="Type" type="xs:string"/>
                    <xs:element name="Version" type="xs:string"/>
                    <xs:element name="EditorFileName" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="UpdateConventionEvents">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- List of one or more convention events and room directions -->
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                        <xs:element name="ConventionEvents" type="v1_0:ConventionEvent" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="ConventionRoomDirections" type="v1_0:ConventionRoomDirection" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AddConventionEvents">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- List of one or more convention events. -->
                        <xs:element name="ConventionEvents" type="v1_0:ExternalConventionEvent" minOccurs="0"
                                    maxOccurs="unbounded"/>
                        <xs:element name="ConventionRoomDirections" type="v1_0:ConventionRoomDirection" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VerifyContentRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="FileList" type="xs:string" maxOccurs="unbounded"/>
                        <!-- associated media event in One Link -->
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="FileDownloadRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="FileList" type="v1_0:File" maxOccurs="unbounded"/>
                        <!-- List of one or more device id's. -->
                        <xs:element name="DeviceIPs" type="xs:string" maxOccurs="unbounded"/>
                        <xs:element name="Type" type="v1_0:FileDownloadType"/>
                        <!-- associated media event in One Link -->
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="FileDownloadRequestComplete">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- List of one or more device id's. -->
                        <xs:element name="DeviceIPs" type="xs:string" maxOccurs="unbounded"/>
                        <!-- components downloaded -->
                        <xs:element name="FileList" type="v1_0:File" maxOccurs="unbounded"/>
                        <xs:element name="Type" type="v1_0:FileDownloadType"/>
                        <!-- associated media event in One Link -->
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RegisterContentRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Content" type="v1_0:Content"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RegisterComponentRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Component" type="v1_0:File"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RemoveContentRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                        <xs:element name="Content" type="v1_0:Content" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RemoveComponentRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                        <xs:element name="Component" type="v1_0:File" minOccurs="1" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="MediaEventType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ChangeChannel"/>
            <xs:enumeration value="DownloadComponents"/>
            <xs:enumeration value="DownloadDefaultContent"/>
            <xs:enumeration value="DownloadRequest"/>
            <xs:enumeration value="RestartSign"/>
            <xs:enumeration value="RestartDisplay"/>
            <xs:enumeration value="ScreenShot"/>
            <xs:enumeration value="RemoveContent"/>
            <xs:enumeration value="ConventionUpdate"/>
            <xs:enumeration value="Identify"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="ScreenShot">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Details" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                        New Stuff for Media Sign - Clean up this file once stable
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  -->

    <xs:complexType name="MicroChannelDefinition">
        <xs:annotation>
            <xs:documentation>
                Defines a Channel to be played by a One Link Micro Media Sign (AVL, etc).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Code" type="xs:string"/>
            <xs:element name="MainSwf" type="v1_0:File"/>
            <xs:element name="MicroSignCustomization" type="v1_0:MicroSignCustomization"/>
            <xs:element name="MinimumWinnerDuration" type="xs:int"/>
            <xs:element name="ComplementaryFiles" type="v1_0:File" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="ChannelWidth" type="xs:int"/>
            <xs:element name="ChannelHeight" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MicroSignCustomization">
        <xs:sequence>
            <xs:element name="BackgroundImage" type="v1_0:File"/>
            <xs:element name="AccentColor" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="Channel">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:MediaChannelDefinition"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MediaChannelDefinition">
        <xs:annotation>
            <xs:documentation>
                Defines a Channel to be played by a One Link Media Sign.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Code" type="xs:string"/>
            <!-- This is the size of all the programs in the channel in kb -->
            <xs:element name="Size" type="xs:int"/>
            <xs:element name="Description" type="xs:string"/>
            <xs:element name="Duration" type="xs:decimal"/>
            <xs:element name="Timelines" type="v1_0:MediaChannelTimeline" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="TransitionImage" type="v1_0:File"/>
            <xs:element name="BackgroundColor" type="xs:long"/>
            <xs:element name="ChannelWidth" type="xs:int"/>
            <xs:element name="ChannelHeight" type="xs:int"/>
            <xs:element name="ChannelImage" type="xs:base64Binary"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MediaChannelTimeline">
        <xs:annotation>
            <xs:documentation>
                Defines each individual timeline of a given One Link Media channel.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Color" type="xs:long"/>
            <xs:element name="Duration" type="xs:decimal"/>
            <xs:element name="Depth" type="xs:int"/>
            <!-- (Optional)  Indicates that this timeline only plays as a result of an event in
                  the One Link System -->
            <xs:element name="BeginEvent" type="v1_0:ChannelTimelineEvent"/>
            <!-- enumeration? -->
            <!-- (Optional)  Indicates that this timeline stops playing as a result of an event in
                  the One Link System -->
            <xs:element name="CompleteEvent" type="v1_0:ChannelTimelineEvent"/>
            <xs:element name="Loop" type="xs:boolean"/>
            <xs:element name="MajorOnly" type="xs:boolean"/>
            <!-- This is the minimum/maximum duration in seconds an event timeline will be displayed on the media sign -->
            <xs:element name="MinimumDuration" type="xs:long"/>
            <xs:element name="MaximumDuration" type="xs:long"/>
            <xs:element name="Programs" type="v1_0:MediaProgramDefinition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ChannelTimelineEvent">
        <xs:annotation>
            <xs:documentation>
                An event which causes an "Event" based timeline to play/stop
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <!-- The name of the event, mapping to an enum in One Link -->
            <xs:element name="EventName" type="xs:string"/>
            <!-- For winners, used to map a event to a particular level sequence -->
            <xs:element name="SequenceId" type="xs:long"/>
            <!-- Optional element to identify a filter on a particular Key in the TriggerEntries -->
            <xs:element name="KeyFilter" type="xs:string" minOccurs="0"/>
            <!-- Optional element to identify a filter on a particular Value in the TriggerEntries -->
            <xs:element name="ValueFilter" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="Program">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:MediaProgramDefinition"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MediaProgramDefinition">
        <xs:annotation>
            <xs:documentation>
                Defines a One Link Media Program, the building blocks of One Link Media System channels.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Duration" type="xs:decimal"/>
            <xs:element name="Description" type="xs:string"/>
            <xs:element name="TimelineLength" type="xs:decimal"/>
            <xs:element name="TimelineStart" type="xs:decimal"/>
            <xs:element name="Width" type="xs:decimal"/>
            <xs:element name="Height" type="xs:decimal"/>
            <xs:element name="BackgroundColor" type="xs:long"/>
            <xs:element name="LocationX" type="xs:int"/>
            <xs:element name="LocationY" type="xs:int"/>
            <xs:element name="Transparent" type="xs:boolean"/>
            <xs:element name="Timelines" type="v1_0:MediaProgramTimelineDefinition" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element name="MaskedRegions" type="xs:string"/>
            <xs:element name="BeginTransition" type="xs:string"/>
            <xs:element name="BeginTransitionArgs" type="xs:string"/>
            <xs:element name="EndTransition" type="xs:string"/>
            <xs:element name="EndTransitionArgs" type="xs:string"/>
            <xs:element name="Loop" type="xs:boolean"/>
            <xs:element name="ProgramImage" type="xs:base64Binary"/>

            <!-- Version of One Link program was exported from, ie "5.3.1" -->
            <xs:element name="SchemaVersion" type="xs:string"/>

        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MediaProgramTimelineDefinition">
        <xs:annotation>
            <xs:documentation>
                Defines an individual timeline within a One Link Media Program
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="FriendlyName" type="xs:string"/>
            <xs:element name="Type" type="xs:string"/>
            <xs:element name="MD5" type="xs:string"/>
            <xs:element name="Component" type="xs:string"/>
            <xs:element name="Effects" type="xs:string"/>
            <xs:element name="StartTime" type="xs:decimal"/>
            <xs:element name="Duration" type="xs:decimal"/>
            <xs:element name="Depth" type="xs:int"/>
            <xs:element name="MatrixX" type="xs:decimal"/>
            <xs:element name="MatrixY" type="xs:decimal"/>
            <xs:element name="MatrixA" type="xs:decimal"/>
            <xs:element name="MatrixB" type="xs:decimal"/>
            <xs:element name="MatrixC" type="xs:decimal"/>
            <xs:element name="MatrixD" type="xs:decimal"/>
            <xs:element name="BeginTransition" type="xs:string"/>
            <xs:element name="BeginTransitionArgs" type="xs:string"/>
            <xs:element name="EndTransition" type="xs:string"/>
            <xs:element name="EndTransitionArgs" type="xs:string"/>
            <xs:element name="ComplementaryFiles" type="v1_0:File" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ChangeChannel">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="ChannelDefinition" type="v1_0:MediaChannelDefinition"/>
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ChangeMicroChannel">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="ChannelDefinition" type="v1_0:MicroChannelDefinition"/>
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Acknowledgement to a configuration update. -->
    <xs:element name="MediaAcknowledgement">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MediaEventId" type="v1_0:MessageId"/>
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element minOccurs="0" name="Description" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Video Stream summary information, as needed by devices to participate in a level. -->
    <xs:complexType name="VideoStream">
        <xs:sequence>
            <!-- The video stream address (RTP). -->
            <xs:element name="StreamAddress" type="xs:string"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="InputSource" type="xs:string"/>
            <!-- The order of the streams, as to relate to various media components -->
            <xs:element name="SequenceId" type="xs:long"/>
            <xs:element name="Micro" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="PlaylistDefinition">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:Playlist"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Playlist">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Items" type="v1_0:PlaylistItem" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="ParentPlaylist" type="v1_0:Playlist"/>
            <xs:element name="Shuffle" type="xs:boolean"/>
            <xs:element name="Fade" type="xs:boolean" minOccurs="0"/>
            <xs:element name="CheckResolution" type="xs:boolean"/>
            <xs:element name="Width" type="xs:int"/>
            <xs:element name="Height" type="xs:int"/>
            <xs:element name="Description" type="xs:string"/>
            <xs:element name="SpotPlaylists" type="v1_0:SpotPlaylist" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="SpotPlaylist" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PlaylistItem">
        <xs:sequence>
            <xs:element name="Content" type="v1_0:File"/>
            <xs:element name="Enabled" type="xs:boolean"/>
            <xs:element name="BeginDate" type="xs:dateTime"/>
            <xs:element name="EndDate" type="xs:dateTime"/>
            <xs:element name="BeginTime" type="xs:string"/>
            <xs:element name="EndTime" type="xs:string"/>
            <xs:element name="ActiveSunday" type="xs:boolean"/>
            <xs:element name="ActiveMonday" type="xs:boolean"/>
            <xs:element name="ActiveTuesday" type="xs:boolean"/>
            <xs:element name="ActiveWednesday" type="xs:boolean"/>
            <xs:element name="ActiveThursday" type="xs:boolean"/>
            <xs:element name="ActiveFriday" type="xs:boolean"/>
            <xs:element name="ActiveSaturday" type="xs:boolean"/>
            <xs:element name="SequenceId" type="xs:long"/>
            <xs:element name="AudioAdjustment" type="xs:decimal"/>
            <xs:element name="Mute" type="xs:boolean"/>
            <xs:element name="Image" type="xs:boolean"/>
            <xs:element name="Duration" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SpotPlaylist">
        <xs:sequence>
            <xs:element name="PlayEntirePlaylist" type="xs:boolean"/>
            <xs:element name="AddEntryEveryNItems" type="xs:int"/>
            <xs:element name="SpotPlaylist" type="v1_0:Playlist"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ChannelSync">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="ChannelPlaybackPosition" type="xs:long"/>
                        <xs:element name="SnapshotTimestamp" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="MultiDisplaySlaveChannelRestartRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Scheduled task base. -->
    <xs:complexType name="ScheduledTask">
        <xs:sequence>
            <xs:element name="Id" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Add/Modify/Remove a scheduled task -->

    <xs:element name="AddScheduledTask">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Task" type="v1_0:ScheduledTask" minOccurs="1" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="ModifyScheduledTask">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Task" type="v1_0:ScheduledTask" minOccurs="1" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="RemoveScheduledTask">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Task" type="v1_0:ScheduledTask" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="Username" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Used by ONE LINK Slots to inform ONE LINK Media that a scheduled media task (scheduled channel change) that references
    a level with a schedule is due to be triggered due to the level schedule executing -->
    <xs:element name="LevelScheduleTriggered">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="LevelPitaId" type="xs:long"/>
                        <xs:element name="LevelScheduleType" type="v1_0:LevelScheduleType" minOccurs="0"/>
                        <xs:element name="ReplacementLevelPitaId" type="xs:long" minOccurs="0"/>
                        <xs:element name="FromExternalLevel" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Uncarded session events. -->
    <xs:element name="StartUncardedSession">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="EndUncardedSession">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ActiveLevelListRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ActiveLevelListResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Levels" type="v1_0:Level" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Device lookup message. -->
    <xs:element name="DeviceAddressLookupRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element minOccurs="1" maxOccurs="1" name="AssetNumber" type="xs:string"/>
                        <xs:element minOccurs="0" maxOccurs="1" name="DeviceType" type="xs:string"/>
                        <xs:element name="FullConfigRequested" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="DeviceAddressLookup">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element minOccurs="0" maxOccurs="unbounded" name="DeviceInformation">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element minOccurs="0" maxOccurs="1" name="DeviceId" type="v1_0:DeviceId"/>
                                    <xs:element minOccurs="1" maxOccurs="1" name="DeviceAddress"
                                                type="v1_0:DeviceAddress"/>
                                    <xs:element minOccurs="1" maxOccurs="1" name="IPAddress" type="v1_0:IPAddress"/>
                                    <xs:element minOccurs="1" maxOccurs="1" name="MACAddress" type="v1_0:MACAddress"/>
                                    <xs:element minOccurs="1" maxOccurs="1" name="AssetNumber" type="xs:string"/>
                                    <xs:element minOccurs="1" maxOccurs="1" name="DeviceType" type="xs:string"/>
                                    <!-- For Intelligent Gaming integration -->
                                    <!-- additional elements to include for iCards if request specifies FullConfigRequested -->
                                    <xs:element minOccurs="0" maxOccurs="1" name="Configuration"
                                                type="v1_0:Configuration"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Configuration">
        <xs:choice>
            <xs:element ref="v1_0:ICardConfiguration"/>
            <xs:element ref="v1_0:MediaConfiguration"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="NameValuePair">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- ==================  drinks messages  =================== -->

    <xs:complexType name="Category">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Drink">
        <xs:sequence>
            <xs:element name="Category" type="v1_0:Category"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Price" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="OrderDrink">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="CallOnly" type="xs:boolean"/>
                        <xs:element name="Drink" type="v1_0:Drink"/>
                        <xs:element name="PatronAccount" type="v1_0:PatronAccount"/>
                        <xs:element name="PointBalance" type="xs:int"/>
                        <xs:element name="PaymentType" type="v1_0:PaymentType"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="PaymentType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Cash"/>
            <xs:enumeration value="Comp"/>
            <xs:enumeration value="Points"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="DrinkOrderProcessed">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="OrderId" type="xs:long"/>
                        <xs:element name="PatronAccount" type="v1_0:PatronAccount"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="SystemAlert">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Message" type="xs:string"/>
                        <!-- number of (sec) to display alert -1 show forever -->
                        <xs:element name="Duration" type="xs:int"/>
                        <xs:element name="Modal" minOccurs="0" type="xs:boolean"/>
                        <xs:element name="MultiLine" minOccurs="0" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ClearAlert">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>

                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>


    <xs:element name="ReportRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="RequestId" type="xs:long"/>
                        <xs:element name="ReportType" type="xs:string"/>
                        <xs:element name="OutputPdf" type="xs:boolean"/>
                        <xs:element name="OutputCsv" type="xs:boolean"/>
                        <xs:element name="Parameter" type="v1_0:Setting" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="ReportStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Created"/>
            <xs:enumeration value="Running"/>
            <xs:enumeration value="Completed"/>
            <xs:enumeration value="Error"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="ReportStatusUpdate">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="RequestId" type="xs:long"/>
                        <xs:element name="ReportType" type="xs:string"/>
                        <xs:element name="ReportStatus" type="v1_0:ReportStatus"/>
                        <xs:element name="Message" type="xs:string"/>
                        <xs:element name="PdfUrl" type="xs:string"/>
                        <xs:element name="CsvUrl" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ReportDelete">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="RequestId" type="xs:long"/>
                        <xs:element name="ReportType" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PlaybackEvent">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="ContentName" type="xs:string"/>
                        <xs:element name="Duration" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TicketPrintRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="PcxImage" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TicketPrintResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>

                        <!-- Success, Failed, Pending -->
                        <xs:element name="Status" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Achievement">
        <xs:sequence>
            <xs:element name="title" type="xs:string"/>
            <xs:element name="description" type="xs:string"/>
            <xs:element name="points" type="xs:int"/>
            <xs:element name="badge" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="AchievementUnlocked">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Achievement" type="v1_0:Achievement"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PrintCompTicket">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="compName" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- ==================  vertex messages  =================== -->


    <xs:complexType name="ExternalLevel">
        <xs:sequence>
            <xs:element name="ExternalId" type="xs:string"/>                       <!-- Composite id of the Level -->
            <xs:element name="Name" type="xs:string"/>                             <!-- Name of the Level -->
            <xs:element name="TimeToLiveSeconds"
                        type="xs:int"/>                    <!-- Time in seconds of how long the current level value is valid -->
            <xs:element name="CurrentValue" type="v1_0:Currency"/>                  <!-- Current value of the Level -->
            <xs:element name="InitialValue" type="v1_0:Currency" minOccurs="0"/>    <!-- Initial value of the Level -->
        </xs:sequence>

    </xs:complexType>

    <xs:element name="ExternalLevels">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Levels" type="v1_0:ExternalLevel" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>


    <xs:complexType name="ExternalJackpotHit">
        <xs:sequence>
            <xs:element name="ExternalId" type="xs:string"/>               <!-- Composite id of the Jackpot -->
            <xs:element name="ExternalLevelId" type="xs:string"/>          <!-- Composite id of the Level -->
            <xs:element name="EgmId" type="xs:string" minOccurs="0"/>       <!-- Id of the winning machine -->
            <xs:element name="HitTimeUtc" type="xs:long"/>                 <!-- Time of jackpot hit -->
            <xs:element name="ClearTimeUtc" type="xs:long" minOccurs="0"/>  <!-- Time of jackpot cleared -->
            <xs:element name="PaidValue" type="v1_0:Currency"/>             <!-- Amount Paid -->
            <xs:element name="Status" type="v1_0:JackpotPaidStatus" minOccurs="0"/>
            <!-- The type of trigger that fired this jackpot. -->
            <xs:element name="JackpotTriggerType" type="v1_0:JackpotTriggerType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ExternalJackpotHits">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="JackpotHits" type="v1_0:ExternalJackpotHit" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
        Message indicating an external level is about to choose a winner.
    -->
    <xs:element name="ExternalJackpotAnticipation">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="ExternalLevelId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>


    <!-- ==============   DNC Messaging =====================  -->


    <!-- BONUS LISTING REQUEST and RESPONSE -->
    <xs:element name="BonusListingRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="BonusListingResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="Bonuses" type="v1_0:Bonus" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="BonusListingInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="BonusListingInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="ErrorMessage" type="xs:string"/>
                        <xs:element name="Bonuses" type="v1_0:Bonus" maxOccurs="unbounded"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Bonus">
        <xs:sequence>
            <!-- existing fields from nConnect -->
            <xs:element name="Active" type="xs:boolean"/>
            <xs:element name="BonusName" type="xs:string"/>
            <xs:element name="BonusType" type="xs:string"/>
            <xs:element name="BonusClientData" type="v1_0:BonusClient" minOccurs="1" maxOccurs="unbounded"/>
            <xs:element name="EndDate" type="xs:dateTime"/>
            <xs:element name="StartDate" type="xs:dateTime"/>
            <xs:element name="SourceSystemName" type="xs:string"/>
            <xs:element name="SourceSystemBonusId" type="xs:string"/>
            <xs:element name="SourceSystemBonusIdName" type="xs:string"/>
            <xs:element name="SourceSystemId" type="xs:long"/>
            <xs:element name="BonusId" type="xs:string"/>
            <xs:element name="Amount" type="v1_0:Currency"/>
            <xs:element name="Quantity" type="xs:long"/>
            <!-- Virtual Drawing Entries are activated or not-->
            <xs:element name="Activated" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="BonusClient">
        <xs:sequence>
            <xs:element name="ClientType" type="xs:string"/>
            <xs:element name="Display" type="xs:boolean"/>
            <xs:element name="Description" type="xs:string"/>
            <xs:element name="ImageUrl" type="xs:string"/>
            <xs:element name="IsDescriptionOverride" type="xs:boolean"/>
            <xs:element name="IsImageOverride" type="xs:boolean"/>
            <xs:element name="IsTitleOverride" type="xs:boolean"/>
            <xs:element name="Title" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="BonusTypesRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="BonusTypesResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                        <xs:element name="BonusTypes" type="v1_0:BonusType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="BonusType">
        <xs:sequence>
            <xs:element name="BonusTypeId" type="xs:string"/>
            <xs:element name="BonusTypeName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- VOUCHER LISTING REQUEST and RESPONSE -->

    <xs:element name="CampaignInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                        <xs:element name="BonusType" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CampaignInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Bonuses" type="v1_0:Bonus" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Request from VirtualDrawings: The bonus levels referring to VirtualDrawings MultiplierIds/ DrawingId-->
    <xs:element name="LevelInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="MultiplierIds" type="xs:long" maxOccurs="unbounded"/>
                        <xs:element name="DrawingId" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Response to VirtualDrawings: The bonus levels referring to VirtualDrawings MultiplierIds/ DrawingId-->
    <xs:element name="LevelInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Levels" type="v1_0:LevelInfo" maxOccurs="unbounded"/>
                        <!-- Success/Failure from One Link -->
                        <xs:element name="Success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Request from VirtualDrawings: Update the VirtualDrawings Multiplier information -->
    <xs:element name="MultiplierUpdateRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Multiplier" type="v1_0:Multiplier"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Response to VirtualDrawings: VirtualDrawings Multiplier information update response -->
    <xs:element name="MultiplierUpdateResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <!-- Success/Failure from One Link -->
                        <xs:element name="Success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- LevelInfo used in LevelInfoResponse for sending level details -->
    <xs:complexType name="LevelInfo">
        <xs:sequence>
            <xs:element name="LevelId" type="xs:long"/>
            <xs:element name="LevelName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="MultipliersInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="MultipliersInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="VirtualDrawingsMultipliers" type="v1_0:Multiplier" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="DrawingsInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="DrawingsInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="VirtualDrawings" type="v1_0:DrawingsInfo" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Multiplier">
        <xs:sequence>
            <xs:element name="ID" type="xs:long"/>
            <xs:element name="Name" type="xs:string" minOccurs="0"/>
            <xs:element name="Value" type="xs:decimal"/>
            <xs:element name="DrawTime" type="xs:long" minOccurs="0"/>
            <xs:element name="CampaignName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DrawingsInfo">
        <xs:sequence>
            <xs:element name="DrawingId" type="xs:long"/>
            <xs:element name="DrawTime" type="xs:long" minOccurs="0"/>
            <xs:element name="CampaignName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Offer">
        <xs:sequence>
            <xs:element name="OfferId" type="xs:string"/>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Quantity" type="xs:int" minOccurs="0"/>
            <xs:element name="Denomination" type="v1_0:Currency" minOccurs="0"/>
            <xs:element name="PointValue" type="xs:long" minOccurs="0"/>
            <xs:element name="EndDate" type="xs:dateTime" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="VoucherListingInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VoucherListingInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Offers" type="v1_0:Offer" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VoucherListingRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long" minOccurs="0"/>
                        <xs:element name="PlayerStationId" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VoucherListingResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <!-- Offer elements -->
                        <xs:element name="Offers" type="v1_0:Offer" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PinValidationRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerPin" type="xs:string"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSGameCategoryRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSGameCategoryResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="GameCategories" type="v1_0:GameCategory" maxOccurs="unbounded"/>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="GameCategory">
        <xs:sequence>
            <!-- Game cateory fields-->
            <xs:element name="Type" type="xs:string"/>
            <xs:element name="Description" type="xs:string"/>
            <xs:element name="Id" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="PinValidationResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <!-- if pin entry was valid -->
                        <xs:element name="PinValid" type="xs:boolean"/>
                        <!-- if user can retry pin entry, or if locked (too many attempts, account locked) -->
                        <xs:element name="CanRetry" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSPinValidationRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerPin" type="xs:string"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSPinValidationResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <!-- if pin entry was valid -->
                        <xs:element name="PinValid" type="xs:boolean"/>
                        <!-- if user can retry pin entry, or if locked (too many attempts, account locked) -->
                        <xs:element name="CanRetry" type="xs:boolean"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ErrorResponse" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VoucherRedeemRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="VoucherId" type="xs:string"/>
                        <xs:element name="JackpotId" type="xs:long" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VoucherRedeemResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="VoucherId" type="xs:string"/>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <!-- Voucher can failure because out of stock, UI will show different message -->
                        <xs:element name="VoucherOutOfStock" type="xs:boolean"/>
                        <xs:element name="JackpotId" type="xs:long" minOccurs="0"/>
                        <xs:element name="ValidationNumber" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSVoucherRedeemRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="VoucherId" type="xs:string"/>
                        <xs:element name="JackpotId" type="xs:long" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSVoucherRedeemResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="VoucherId" type="xs:string"/>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <!-- Voucher can failure because out of stock, UI will show different message -->
                        <xs:element name="VoucherOutOfStock" type="xs:boolean"/>
                        <xs:element name="JackpotId" type="xs:long" minOccurs="0"/>
                        <xs:element name="ErrorString" type="xs:string" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string" minOccurs="0"/>
                        <xs:element name="ValidationNumber" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VoucherPrintRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="VoucherId" type="xs:string"/>
                        <xs:element name="ValidationNumber" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="VoucherPrintResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSVoucherPrintRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="VoucherId" type="xs:string"/>
                        <xs:element name="ValidationNumber" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSVoucherPrintResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="ValidationNumber" type="xs:string"/>
                        <xs:element name="ErrorString" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TestPrintRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="JobId" type="xs:string"/>
                        <xs:element name="AssetNumber" type="xs:string"/>
                        <xs:element name="Location" type="xs:string"/>
                        <xs:element name="RequestTime" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="TestPrintResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="JobId" type="xs:string"/>
                        <xs:element name="AssetNumber" type="xs:string"/>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="ErrorString" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>


    <!-- ================== Rewards ====================== -->

    <xs:element name="RewardsListingRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string" minOccurs="0"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RewardsListingResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="Rewards" type="v1_0:Reward" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RewardsListingInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RewardsListingInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="ErrorMessage" type="xs:string"/>
                        <xs:element name="Rewards" type="v1_0:Reward" maxOccurs="unbounded"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="Reward">
        <xs:sequence>
            <xs:element name="VoucherId" type="xs:string"/>
            <xs:element name="OfferID" type="xs:string"/>
            <xs:element name="Title" type="xs:string"/>
            <xs:element name="Description" type="xs:string"/>
            <xs:element name="ImageUrl" type="xs:string"/>
            <xs:element name="IsPrintable" type="xs:boolean"/>
            <xs:element name="EndDate" type="xs:dateTime"/>
            <xs:element name="StartDate" type="xs:dateTime"/>
            <xs:element name="ValidationNumber" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="RewardPrintRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long" minOccurs="1"/>
                        <xs:element name="PlayerStationId" type="xs:string" minOccurs="0"/>
                        <xs:element name="VoucherId" type="xs:string" minOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="RewardPrintResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Success/Failure from nConnect -->
                        <xs:element name="Success" type="xs:boolean" minOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>


    <!-- ==================  virtual drawings  =================== -->

    <xs:element name="PointsUpdate">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:string"/>
                        <xs:element name="PointsDelta" type="xs:decimal"/>
                        <xs:element name="PointsSessionTotal" type="xs:decimal"/>
                        <!-- An id for the session, echoed back in any BonusingAvailable messages to validate they belong to the proper session.

                             Could be implemented by a simple 16 bit unsigned counter that overflows back to zero but should be persistent to avoid
                             starting at zero after a reboot.
                         -->
                        <xs:element name="SessionId" type="xs:int" minOccurs="0"/>
                        <!-- The currently selected game number, if known. -->
                        <xs:element name="GameNumber" type="xs:int" minOccurs="0"/>

                        <!-- The token denomation, ie 0.25 for a 25 cent poker game. -->
                        <xs:element name="Denomination" type="v1_0:Currency" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="DrawingEntriesAwarded">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:string"/>
                        <xs:element name="Entries" type="xs:decimal"/>
                        <xs:element name="CampaignName" type="xs:string"/>
                        <xs:element name="CampaignId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="OfferRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="JackpotId" type="xs:long"/>
                        <xs:element name="OfferId" type="xs:string"/>
                        <xs:element name="OfferName" type="xs:string"/>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="LevelName" type="xs:string"/>
                        <xs:element name="IsMajor" type="xs:boolean"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="OfferAcceptanceResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="JackpotId" type="xs:long"/>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="OfferId" type="xs:string"/>
                        <xs:element name="Accepted" type="xs:boolean"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="OfferPrintRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="PlayerStationId" type="xs:string"/>
                        <xs:element name="OfferId" type="xs:string"/>
                        <xs:element name="JackpotId" type="xs:long" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="OfferPrintResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSPrintOfferRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="OfferId" type="xs:string"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="PTSPrintOfferResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Success" type="xs:boolean"/>
                        <xs:element name="ErrorResponse" type="xs:string"/>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- ==================  Machine Online  =================== -->

    <xs:element name="MediaStatusNotification">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MediaStatusNotificationItems" type="v1_0:MediaStatusNotificationItem"
                                    minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MediaStatusNotificationItem">
        <xs:sequence>
            <xs:element name="SourceAsset" type="xs:string"/>
            <xs:element name="PrinterIdentifier" type="xs:string" minOccurs="0"/>
            <xs:element name="GameType" type="xs:string" minOccurs="0"/>
            <xs:element name="Active" type="xs:boolean"/>
            <xs:element name="SourceDevicePitaId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="MediaStatusNotificationResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="MediaStatusNotificationItemResponses"
                                    type="v1_0:MediaStatusNotificationItemResponse" minOccurs="0"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MediaStatusNotificationItemResponse">
        <xs:sequence>
            <xs:element name="SourceAsset" type="xs:string"/>
            <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
            <xs:element name="SourceDevicePitaId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="GetPatronInfo">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="PlayerId" type="xs:long"/>
                        <xs:element name="IncludePointAccounts" type="xs:boolean"/>
                        <xs:element name="IncludePinInfo" type="xs:boolean"/>
                        <xs:element name="IncludeRewards" type="xs:boolean"/>
                        <xs:element name="IncludeExternalAccounts" type="xs:boolean"/>
                        <xs:element name="IncludeStatistics" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="GetPatronInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <!-- Optional carded session information associated with the session. -->
                        <xs:element name="PatronInformation" type="v1_0:PatronSessionInfo" minOccurs="0"/>
                        <!-- Success/Failure in retrieving info -->
                        <xs:element name="Success" type="xs:boolean" />
                        <xs:element name="IncludePointAccounts" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludePinInfo" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeRewards" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeExternalAccounts" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="IncludeStatistics" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="QuarantineRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ExternalWinningHand">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="Cards" type="xs:string" minOccurs="0" maxOccurs="5"/>
                        <xs:element name="LevelId" type="xs:long"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ExternalWinnerPick">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element ref="v1_0:LevelId"/>

                        <!-- The level name, for debugging or user notification. -->
                        <xs:element name="LevelName" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ExternalLevelScheduleTriggered">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="LevelPitaId" type="xs:long"/>
                        <xs:element name="ScheduleType" type="v1_0:LevelScheduleType" minOccurs="0"/>
                        <xs:element name="ReplacementLevelPitaId" type="xs:long" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="LevelScheduleType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Swap"/>
            <xs:enumeration value="Retire"/>
            <xs:enumeration value="SwapAndRetire"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Patron Tier lookup request to OneLink.PlayerTracking -->
    <xs:element name="TierInfoRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Patron Tier lookup response from OneLink.PlayerTracking -->
    <xs:element name="TierInfoResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="Tiers" type="v1_0:PatronTier" maxOccurs="unbounded"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="PatronDrawingEntry">
        <xs:sequence>
            <xs:element name="CampaignId" type="xs:string"/>
            <xs:element name="Entries" type="xs:int"/>
            <xs:element name="CampaignName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- A message that is broadcast via multicast and asks all machines using this level to lock / unlock themselves -->
    <xs:element name="MachineLockEvent">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="LevelPitaId" type="xs:long"/>
                        <xs:element name="JackpotId" type="xs:long" minOccurs="0"/>
                        <xs:element name="ShouldLock" type="xs:boolean"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- External level feed coming from totalizer -->

    <xs:complexType name="TotalizerExternalLevel">
        <xs:sequence>
            <xs:element name="LevelId" type="xs:long"/>
            <xs:element name="LevelName" type="xs:string"/>
            <xs:element name="LevelValue" type="v1_0:Currency"/>                  <!-- Current value of the Level -->
            <xs:element name="VenueId" type="xs:string" minOccurs="0"/>
            <xs:element name="VenueName" type="xs:string"/>
            <xs:element name="InitialValue" type="v1_0:Currency" minOccurs="0"/>    <!-- Initial value of the Level -->
            <xs:element name="TimeToLiveSeconds"
                        type="xs:int"/>                    <!-- Time in seconds of how long the current level value is valid -->
        </xs:sequence>

    </xs:complexType>

    <xs:element name="TotalizerExternalLevels">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Levels" type="v1_0:TotalizerExternalLevel" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="MetricFeed">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="MetricName" type="xs:string"/>
                <xs:element name="MetricData" type="v1_0:MetricData" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MetricData">
        <xs:sequence>
            <xs:element name="DataItems" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="DataKey" type="xs:string"/>
                        <xs:element name="DataValue" type="xs:string"/>
                        <xs:element name="DataType" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="WebEventsConfigurationRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfigurationRequest">
                    <xs:sequence>
                        <xs:element minOccurs="0" maxOccurs="unbounded" name="Settings" type="v1_0:Setting"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="WebEventsConfiguration">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractConfiguration">
                    <xs:sequence>
                        <xs:element name="Adapters" type="v1_0:WebEventsAdapter" minOccurs="1" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="WebEventsAdapter" abstract="true">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="WebEventsLevel">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="levelPitaId" type="xs:long"/>
            <xs:element name="thresholdValue" type="v1_0:Currency" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- This is a MediaTrigger object for use in other messages, not a MediaTrigger message itself -->
    <xs:complexType name="MediaTriggerElement">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="TriggerEntries" type="v1_0:MediaTriggerEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="HttpMediaTriggerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="url" type="xs:string"/>
                    <xs:element name="mediaTriggers" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element name="userAgent" type="xs:string"/>
                    <xs:element name="verifyCertificate" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="HttpPostMediaTriggerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="url" type="xs:string"/>
                    <xs:element name="mediaTriggers" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element name="userAgent" type="xs:string"/>
                    <xs:element name="outputFormat" type="xs:string"/>
                    <xs:element name="verifyCertificate" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="HttpWinnerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="trigger" type="xs:string"/>
                    <xs:element name="url" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element name="userAgent" type="xs:string"/>
                    <xs:element name="verifyCertificate" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="OdometerXmlFileAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="publishingFrequency" type="xs:int"/>
                    <xs:element name="file" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element name="outputFormat" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="OdometerXmlHttpClientAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="publishingFrequency" type="xs:int"/>
                    <xs:element name="url" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element name="userAgent" type="xs:string"/>
                    <xs:element name="outputFormat" type="xs:string"/>
                    <xs:element name="verifyCertificate" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="OdometerXmlHttpServerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="port" type="xs:long"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ShellWinnerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="trigger" type="xs:string"/>
                    <xs:element name="file" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SmtpOdometerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="host" type="xs:string"/>
                    <xs:element name="emailFrom" type="xs:string"/>
                    <xs:element name="emailTo" type="xs:string"/>
                    <xs:element name="subject" type="xs:string"/>
                    <xs:element name="body" type="xs:string"/>
                    <xs:element name="bodyHtml" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SmtpWinnerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="host" type="xs:string"/>
                    <xs:element name="emailFrom" type="xs:string"/>
                    <xs:element name="emailTo" type="xs:string"/>
                    <xs:element name="subject" type="xs:string"/>
                    <xs:element name="body" type="xs:string"/>
                    <xs:element name="bodyHtml" type="xs:string"/>
                    <xs:element name="trigger" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TwitterOdometerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="consumerKey" type="xs:string"/>
                    <xs:element name="consumerSecret" type="xs:string"/>
                    <xs:element name="accessToken" type="xs:string"/>
                    <xs:element name="accessTokenSecret" type="xs:string"/>
                    <xs:element name="tweet" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TwitterWinnerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="consumerKey" type="xs:string"/>
                    <xs:element name="consumerSecret" type="xs:string"/>
                    <xs:element name="accessToken" type="xs:string"/>
                    <xs:element name="accessTokenSecret" type="xs:string"/>
                    <xs:element name="tweet" type="xs:string"/>
                    <xs:element name="trigger" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="MediaTriggerWinnerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="trigger" type="xs:string"/>
                    <xs:element name="apiUser" type="xs:string"/>
                    <xs:element name="apiPassword" type="xs:string"/>
                    <xs:element name="apiUrl" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element name="mediaTrigger" type="v1_0:MediaTriggerElement"/>
                    <xs:element name="userAgent" type="xs:string"/>
                    <xs:element name="verifyCertificate" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="MediaTriggerOdometerAdapter">
        <xs:complexContent>
            <xs:extension base="v1_0:WebEventsAdapter">
                <xs:sequence>
                    <xs:element name="apiUser" type="xs:string"/>
                    <xs:element name="apiPassword" type="xs:string"/>
                    <xs:element name="apiUrl" type="xs:string"/>
                    <xs:element name="levels" type="v1_0:WebEventsLevel" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element name="mediaTrigger" type="v1_0:MediaTriggerElement"/>
                    <xs:element name="userAgent" type="xs:string"/>
                    <xs:element name="verifyCertificate" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="LevelRequest">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ExpirationTime" type="xs:long"/>
                        <xs:element name="Filter" type="v1_0:LevelFilter" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="LevelResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="v1_0:AbstractDeviceMessage">
                    <xs:sequence>
                        <xs:element name="TransactionId" type="xs:string"/>
                        <xs:element name="ErrorResponse" type="xs:string" minOccurs="0"/>
                        <xs:element name="Levels" type="v1_0:Level" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="LevelFilter">
        <xs:sequence>
            <xs:element name="Active" type="xs:boolean" nillable="true"/>
            <xs:element name="Types" type="v1_0:ICardLevelType" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
