pipeline {
    agent any

    environment {
        SONARQUBE_SCANNER_HOME = tool 'sonarqube'
        SONARQUBE_URL = 'http://172.28.58.54:9000'
        SONARQUBE_PROJECT_KEY = 'sonarqube-nCompass'
        SONARQUBE_TOKEN = 'squ_5a288e1acbf7b6e43a496a4ac2e8ae1505ddd761'
        SONARQUBE_INSTALL_DIR = "${WORKSPACE}/sonar-scanner"
        DOCKER_IMAGE = 'lakeshsharma/us-west1-docker.pkg.dev:angular'
        DOCKER_COMPOSE_FILE = "${WORKSPACE}/src/angularsrc/docker-compose.yml"
    }

    stages {
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_CREDS', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"'
                }
            }
        }

        stage('Archiving') {
            steps {
                script {
                    env.ARCHIVE_DIRECTORY = "${workspace}/.archive"
                    dir(env.ARCHIVE_DIRECTORY) {
                        deleteDir()
                        sh "mkdir -p ${ARCHIVE_DIRECTORY}"
                    }

                    env.NCOMPASS_SRC = "${workspace}/src"
                    sh "mkdir -p ${NCOMPASS_SRC}"

                    dir(env.NCOMPASS_SRC) {
                        checkout scm
                    }
                }
            }
        }

        stage('Setup Angular') {
            steps {
                script {
                    env.ANGULAR_TEST_ARTIFACTS = "${workspace}/src/.angular-test"
                    dir(env.ANGULAR_TEST_ARTIFACTS) {
                        deleteDir()
                        sh "mkdir -p ${ANGULAR_TEST_ARTIFACTS}"
                    }

                    env.ANGULAR_ARTIFACTS = "${workspace}/src/.angular"
                    dir(env.ANGULAR_ARTIFACTS) {
                        deleteDir()
                        sh "mkdir -p ${ANGULAR_ARTIFACTS}"
                    }

                    env.ANGULAR_SRC = "${workspace}/src/angularsrc"
                    sh "mkdir -p ${ANGULAR_SRC}"

                    // Install Node.js and npm
                    tool name: 'Node.js', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'

                    // Run npm init -y
                    sh "cd ${ANGULAR_SRC} && npm init -y"
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    // Build Docker image
                    docker.build(DOCKER_IMAGE).push()
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Create Docker Compose file
                    writeFile file: DOCKER_COMPOSE_FILE, text: """
                    version: '3'
                    services:
                      angular-app:
                        image: ${DOCKER_IMAGE}
                        ports:
                          - "8181:95"
                    """
                    
                    // Deploy using Docker Compose
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE} up -d"
                }
            }
        }

        // ... Other stages

        stage('Code Quality Check via SonarQube') {
            steps {
                script {
                    withSonarQubeEnv("sonarqube-nCompass") {
                        sh "${SONARQUBE_INSTALL_DIR}/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
                            -Dsonar.projectKey=${SONARQUBE_PROJECT_KEY} \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=${SONARQUBE_URL} \
                            -Dsonar.login=${SONARQUBE_TOKEN}"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline succeeded! Application is deployed."
        }
    }
}
